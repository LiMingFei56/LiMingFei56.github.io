<!DOCTYPE html>
<html prefix="og: http://ogp.me/ns#" lang="en-US"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><link rel="stylesheet" type="text/css" href="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/single.css" media="all"><meta charset="UTF-8"><link rel="profile" href="https://gmpg.org/xfn/11"><link rel="pingback" href="https://www.javacodegeeks.com/xmlrpc.php"><script style="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/analytics.js" async=""></script><script src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/gpt.js" type="text/javascript" async=""></script><script type="text/javascript">var googletag=googletag||{};googletag.cmd=googletag.cmd||[];(function(){var gads=document.createElement('script');gads.async=true;gads.type='text/javascript';var useSSL='https:'==document.location.protocol;gads.src=(useSSL?'https:':'http:')+'//www.googletagservices.com/tag/js/gpt.js';var node=document.getElementsByTagName('script')[0];node.parentNode.insertBefore(gads,node);})();</script><script type="text/javascript">googletag.cmd.push(function(){googletag.defineSlot('/70432299/JCG_Header',[728,90],'div-gpt-ad-1415445260332-0').addService(googletag.pubads());googletag.defineSlot('/70432299/JCG_In-post',[300,250],'div-gpt-ad-1415445260332-2').addService(googletag.pubads());googletag.defineSlot('/70432299/JCG_Side',[300,250],'div-gpt-ad-1415445260332-3').addService(googletag.pubads());googletag.defineSlot('/70432299/JCG_Side_1',[300,250],'div-gpt-ad-1415445260332-4').addService(googletag.pubads());googletag.defineSlot('/70432299/JCG_Under-post',[300,250],'div-gpt-ad-1415445260332-5').addService(googletag.pubads());googletag.defineSlot('/70432299/JCG_Side_2',[300,600],'div-gpt-ad-1415445260332-6').addService(googletag.pubads());googletag.defineSlot('/70432299/JCG_NotifBar',[1220,50],'div-gpt-ad-1431445244472-0').addService(googletag.pubads());googletag.pubads().setTargeting("PostID","25097");googletag.pubads().setTargeting("PostCAT","7");googletag.pubads().enableSingleRequest();googletag.enableServices();});</script><title>Java 8 Features Tutorial - The ULTIMATE Guide (PDF Download)</title><meta name="description" content="Java 8 new features! Lambdas, Streams and more! Explore all the new exciting features of the latest JDK and also download the relevant guide in PDF format!"><meta name="robots" content="noodp"><link rel="canonical" href="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/java-8-features-tutorial_008.htm"><link rel="publisher" href="https://plus.google.com/+JavaCodeGeeks/"><meta name="twitter:card" content="summary"><meta name="twitter:description" content="Java 8 new features! Lambdas, Streams and more! Explore all the new exciting features of the latest JDK and also download the relevant guide in PDF format!"><meta name="twitter:title" content="Java 8 Features Tutorial - The ULTIMATE Guide (PDF Download)"><meta name="twitter:site" content="@javacodegeeks"><meta name="twitter:image" content="https://www.javacodegeeks.com/wp-content/uploads/2012/10/java-logo.jpg"><meta name="twitter:creator" content="@javacodegeeks"><link rel="alternate" type="application/rss+xml" title="Java Code Geeks » Feed" href="https://www.javacodegeeks.com/feed/"><link rel="alternate" type="application/rss+xml" title="Java Code Geeks » Comments Feed" href="https://www.javacodegeeks.com/comments/feed/"><link rel="alternate" type="application/rss+xml" title="Java Code Geeks » Java 8 Features Tutorial – The ULTIMATE Guide (PDF Download) Comments Feed" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/feed/"><link rel="stylesheet" id="Oswald-css" href="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/css_002.css" type="text/css" media="all"><link rel="https://api.w.org/" href="https://www.javacodegeeks.com/wp-json/"><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.javacodegeeks.com/xmlrpc.php?rsd"><link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://www.javacodegeeks.com/wp-includes/wlwmanifest.xml"><meta name="generator" content="WordPress 4.4.2"><link rel="shortlink" href="https://www.javacodegeeks.com/?p=25097"><link rel="alternate" type="application/json+oembed" href="https://www.javacodegeeks.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.javacodegeeks.com%2F2014%2F05%2Fjava-8-features-tutorial.html"><link rel="alternate" type="text/xml+oembed" href="https://www.javacodegeeks.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.javacodegeeks.com%2F2014%2F05%2Fjava-8-features-tutorial.html&amp;format=xml"><link rel="shortcut icon" href="https://www.javacodegeeks.com/wp-content/uploads/2012/12/JavaCodeGeeks-favIcon.png" title="Favicon"><meta property="og:title" content="Java 8 Features Tutorial – The ULTIMATE Guide (PDF Download)"><meta property="og:type" content="article"><meta property="og:description" content="EDITORIAL NOTE: It's been a while since Java 8 is out in the public and everything points to the fac..."><meta property="og:url" content="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html"><meta property="og:site_name" content="Java Code Geeks"><meta property="og:image" content="https://www.javacodegeeks.com/wp-content/uploads/2012/10/java-logo.jpg"> <!--[if IE]><script type="text/javascript">jQuery(document).ready(function(){jQuery(".menu-item").has("ul").children("a").attr("aria-haspopup","true");});</script><![endif]--> <!--[if lt IE 9]><script src="//www.javacodegeeks.com/wp-content/themes/jarida/js/html5.js"></script><script src="//www.javacodegeeks.com/wp-content/themes/jarida/js/selectivizr-min.js"></script><![endif]--> <!--[if IE 8]><link rel="stylesheet" type="text/css" media="all" href="//www.javacodegeeks.com/wp-content/themes/jarida/css/ie8.css" /> <![endif]--><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"><style type="text/css" media="screen">body{background-image:url(https://www.javacodegeeks.com/wp-content/themes/jarida/images/patterns/body-bg1.png);background-position:top center}body.single .entry, body.page
.entry{font-size:15px !important}#main-nav ul li.current-menu-item a,
#main-nav ul li.current-menu-item a:hover,
#main-nav ul li.current-menu-parent a,
#main-nav ul li.current-menu-parent a:hover,
#main-nav ul li.current-page-ancestor a,
#main-nav ul li.current-page-ancestor a:hover,
.pagination span.current,
.ei-slider-thumbs li.ei-slider-element,
.breaking-news span,
.ei-title h2,h2.cat-box-title,
a.more-link,.scroll-nav a,
.flex-direction-nav a,
.tagcloud a:hover,
#tabbed-widget ul.tabs li.active a,
.slider-caption h2, .full-width .content .slider-caption h2,
.review-percentage .review-item span span,.review-final-score,
.woocommerce span.onsale, .woocommerce-page span.onsale ,
.woocommerce .widget_price_filter .ui-slider .ui-slider-handle, .woocommerce-page .widget_price_filter .ui-slider .ui-slider-handle,
.button,a.button,#main-content input[type="submit"],#main-content input[type="submit"]:focus, span.onsale,
.mejs-container .mejs-controls .mejs-time-rail .mejs-time-current,#reading-position-indicator{background-color:#326693 !important}::-webkit-scrollbar-thumb{background-color:#326693 !important}#main-nav,.top-nav{border-bottom-color:#326693}.cat-box , .footer-bottom
.container{border-top-color:#326693}body.single .post .entry a, body.page .post .entry
a{color:#326693}body.single .post .entry a:hover, body.page .post .entry a:hover{color:#478cc4;text-decoration:underline}#main-nav ul
li{text-transform:none}.toc
dl{display:block}.toc
dt{display:block}.toc
dd{display:block;-webkit-margin-start:20px;-moz-margin-start:20px}.toc{line-height:1.4;font-size:90%;border-bottom:1px solid #eee;padding:20px;border:1px
solid #e1e1e1;background:#f1f1f1;border-radius:9px;-moz-border-radius:9px;-webkit-border-radius:9px;width:80%;display:inline-block;margin:20px
0}code{display:inline}.tip{background:url(/wp-content/uploads/sprites.png) -201px -72px no-repeat;padding:10px
20px 25px 80px;margin:2.5em 1em;border-color:#dedede #d8d8d8 #d3d3d3;text-shadow:0 1px 0 #fff;-webkit-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;-moz-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;background-color:#FAFAFA;color:#555;border:1px
solid #DEDEDE;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.download{background:url(/wp-content/uploads/sprites.png) -266px 0px no-repeat;padding:10px
20px 25px 80px;margin:2.5em 1em;border-color:#dedede #d8d8d8 #d3d3d3;text-shadow:0 1px 0 #fff;-webkit-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;-moz-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;background-color:#FAFAFA;color:#555;border:1px
solid #DEDEDE;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.nlbox{background:#E2ECFA;margin:15px
0px 15px;padding:10px;-webkit-border-radius:3px;-mozilla-border-radius:3px;-o-border-radius:3px;border-radius:3px;-moz-box-shadow:0px 2px 2px 1px #d7e1eb;-webkit-box-shadow:0px 2px 2px 1px #d7e1eb;box-shadow:0px 2px 2px 1px #d7e1eb;border:solid 1px #D8D8D8;display:inline-block}.nlbox1{background:#E2ECFA;margin:-10px 0 25px;width:auto;max-width:798px;padding:10px;-webkit-border-radius:3px;-mozilla-border-radius:3px;-o-border-radius:3px;border-radius:3px;-moz-box-shadow:0px 2px 2px 1px #d7e1eb;-webkit-box-shadow:0px 2px 2px 1px #d7e1eb;box-shadow:0px 2px 2px 1px #d7e1eb;border:solid 1px #D8D8D8}.button-gw{border-top:1px solid #96d1f8;background:#65a9d7;background:-webkit-gradient(linear, left top, left bottom, from(#3e779d), to(#65a9d7));background:-webkit-linear-gradient(top, #3e779d, #65a9d7);background:-moz-linear-gradient(top, #3e779d, #65a9d7);background:-ms-linear-gradient(top, #3e779d, #65a9d7);background:-o-linear-gradient(top, #3e779d, #65a9d7);padding:20px
40px;-webkit-border-radius:8px;-moz-border-radius:8px;border-radius:8px;-webkit-box-shadow:rgba(0,0,0,1) 0 1px 0;-moz-box-shadow:rgba(0,0,0,1) 0 1px 0;box-shadow:rgba(0,0,0,1) 0 1px 0;text-shadow:rgba(0,0,0,.4) 0 1px 0;color:white;font-size:34px;font-family:Georgia,Serif;text-decoration:none !important;vertical-align:middle}.button-gw:hover{border-top-color:#28597a;background:#28597a;color:#ccc}.button-gw:active{border-top-color:#1b435e;background:#1b435e}.widget_wpjb-recent-jobs .wpjb-grid-compact{margin-left:5%;margin-right:5%}.attribution{border-color:#dedede #d8d8d8 #d3d3d3;text-shadow:0 1px 0 #fff;-webkit-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;-moz-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;background:#fff;background:-moz-linear-gradient(top, #fff 0%, #f6f6f6 47%, #ededed 100%);background:-webkit-gradient(linear, left top, left bottom, color-stop(0%,#ffffff), color-stop(47%,#f6f6f6), color-stop(100%,#ededed));background:-webkit-linear-gradient(top, #fff 0%,#f6f6f6 47%,#ededed 100%);background:-o-linear-gradient(top, #fff 0%,#f6f6f6 47%,#ededed 100%);background:-ms-linear-gradient(top, #fff 0%,#f6f6f6 47%,#ededed 100%);background:linear-gradient(top, #fff 0%,#f6f6f6 47%,#ededed 100%);padding:3px
8px;line-height:20px;color:#555;border:1px
solid #DEDEDE;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;margin-top:20px;display:inline-block}.attribution
.reference{font-weight:bold}.attribution
table{border:none;background-color:inherit}.attribution table
td{vertical-align:top;padding:0px
5px;border-bottom:none;font-size:inherit}a.TPbutton_w_cnd01lb:hover{background-color:#fc0;background:url(/wp-content/uploads/sprites.png) 0 -102px;color:#fff;text-decoration:none;transition:none}a.TPbutton_w_cnd01lb{-webkit-border-radius:7px;-mozilla-border-radius:7px;-o-border-radius:7px;border-radius:7px;text-decoration:none;color:#fff;font-family:'lucida sans','lucida grande',arial,helvetica,sans-serif;letter-spacing:-1px;font-weight:bold;background-color:#f90;background:url(/wp-content/uploads/sprites.png) 0 -73px;padding:4px
10px 4px 10px;font-size:16px;-moz-box-shadow:0px 3px 3px 2px #d7e1eb;-webkit-box-shadow:0px 3px 3px 2px #d7e1eb;box-shadow:0px 3px 3px 2px #d7e1eb;border:solid 2px #fff;width:200px;height:56px;transition:none}.TPbutton_w_cnd01lb_arrow{position:relative;display:inline-block;overflow:hidden;vertical-align:bottom;width:30px;height:20px;background:url(/wp-content/uploads/sprites.png) -146px 0px}#commentform
input{width:inherit}#author-box .post-listing{margin-bottom:0px}#author-box .block-head
h3{text-transform:none}header#theme-header{margin:0
0 0}blockquote{display:inline-block;margin:20px
0 10px 40px;font-size:14px}blockquote:before{font-size:25px;line-height:inherit}.syntaxhighlighter{display:inline-block}@media (max-width: 767px){#div-gpt-ad-1415445260332-0{display:none}}@media (max-width: 479px){#div-gpt-ad-1415445260332-3{margin-left:-10px}#div-gpt-ad-1415445260332-4{margin-left:-10px}#div-gpt-ad-1415445260332-6{margin-left:-10px}}.wpjb div, body .wpjb p, body .wpjb ul, body .wpjb li, body .wpjb ol, body .wpjb span, body .wpjb img, body .wpjb form, body .wpjb fieldset, body .wpjb label, body .wpjb table, body .wpjb thead, body .wpjb tfoot, body .wpjb tbody, body .wpjb tr, body .wpjb td, body .wpjb strong, body .wpjb b, body .wpjb em, body .wpjb i, body .wpjb
center{margin:0;padding:0;border:0;box-shadow:none;box-sizing:border-box;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;list-style-type:none}.wpjb .wpjb-grid{margin:0% 0% 0% 0%}.wpjb-grid .wpjb-grid-row{clear:both;overflow:hidden;padding:0.75em 0 0.75em 0;margin:0
0 0 0;border-bottom:1px solid whitesmoke}.wpjb-grid .wpjb-grid-row>div{padding:0
1% 0 1%}.wpjb-grid .wpjb-grid-col-right{text-align:right}.wpjb .wpjb-grid .wpjb-sub{display:block;margin:0
0 0 0;padding:2px
0 0 0;line-height:1.3em;font-size:0.95em}.wpjb-col-title{width:40%}[class*='wpjb-col-']{float:left}#wpjb-top-search{margin:0
0 15px 0;padding:8px
2% 2px 2%;clear:both;overflow:hidden}.wpjb .wpjb-layer-inside{border:1px
solid whitesmoke;border-radius:2px;background-color:#fcfcfc;box-shadow:0 1px 1px rgba(0,0,0,.04)}#wpjb-top-search input[type=text]{width:49%;display:inline}.wpjb select, .wpjb textarea, .wpjb input[type=password], .wpjb input[type=text]{margin:2px;padding:6px;box-sizing:border-box;-webkit-box-sizing:border-box;-moz-box-sizing:border-box}#wpjb-top-search ul
li{display:inline-block;line-height:1.2em;margin:2% 1% 1% 1%;float:left}.wpjb input[type=checkbox], .wpjb input[type=radio]{display:inline;margin:0;padding:0;box-sizing:border-box;-webkit-box-sizing:border-box;-moz-box-sizing:border-box}#wpjb-top-search
label{display:inline !important;width:auto;float:none}#wpjb-top-search .wpjb-top-search-submit{float:right;margin:4px
0 4px 0}.sidebar{position:relative}@media screen and (min-width: 500px){.cc_container{left:15px !important}}.cc_container{-webkit-animation-name:fadeInLeft !important;animation-name:fadeInLeft !important}</style><script async="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/pubads_impl_83.js"></script><script src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/single.js" type="text/javascript"></script><script src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/osd.js" type="text/javascript"></script><script src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/common.js" charset="UTF-8" type="text/javascript"></script><script src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/util.js" charset="UTF-8" type="text/javascript"></script><script src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/stats.js" charset="UTF-8" type="text/javascript"></script><link href="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/light-floating.css" type="text/css" rel="stylesheet"></head><body id="top" class="single single-post postid-25097 single-format-standard"><div class="cc_banner-wrapper "><div class="cc_banner cc_container cc_container--open"><a href="#null" data-cc-event="click:dismiss" target="_blank" class="cc_btn cc_btn_accept_all">Got it!</a><p class="cc_message">We
 use cookies to ensure that we give you the best experience on our 
website. If you continue to use this site, you agree to our use of 
cookies <a data-cc-if="options.link" target="_self" class="cc_more_info" href="https://www.javacodegeeks.com/2014/05/about/privacy-policy/">More info</a></p><a class="cc_logo" target="_blank" href="http://silktide.com/cookieconsent">Cookie Consent plugin for the EU cookie law</a></div></div><div style="height: 58px; bottom: auto; top: 0px;" class="x-white foobar-wrapper shadow fb-top"><table style="background-color: rgb(64, 30, 64); border-width: medium medium 3px; border-style: none none solid; border-color: -moz-use-text-color -moz-use-text-color rgb(255, 255, 255); -moz-border-top-colors: none; -moz-border-right-colors: none; -moz-border-bottom-colors: none; -moz-border-left-colors: none; border-image: none; height: 53px; display: table;" class="foobar-container" cellpadding="0" cellspacing="0"><tbody><tr class="foobar-container-row"><td style="height: 50px; width: 0px;" class="foobar-container-left"><div style="max-height: 50px;" class="foobar-container-inner"></div></td><td style="width: 80px;" class="foobar-close-button-spacer"></td><td style="height: 50px; width: 0px;" class="foobar-container-center"><div style="max-height: 50px;" class="foobar-container-inner"><div style="opacity: 100;" class="foobar-message"></div><div style="background-color: rgb(64, 30, 64); height: 50px; margin-top: -25px; display: block;" class="x-white foobar-prev-button"></div><div style="background-color: rgb(64, 30, 64); height: 50px; margin-top: -25px; display: block;" class="x-white foobar-next-button"></div></div></td><td style="height: 50px; width: auto;" class="foobar-container-right"><div style="max-height: 50px;" class="foobar-container-inner"><!-- JCG_NotifBar --><div id="div-gpt-ad-1431445244472-0" style="height: 50px; width: 1220px; margin-left: auto; margin-right: auto;"><script type="text/javascript">googletag.cmd.push(function() { googletag.display('div-gpt-ad-1431445244472-0'); });</script><div style="border: 0pt none;" id="google_ads_iframe_/70432299/JCG_NotifBar_0__container__"><iframe src="javascript:&quot;<html><body style='background:transparent'></body></html>&quot;" style="border: 0px none; vertical-align: bottom;" marginheight="0" marginwidth="0" scrolling="no" name="google_ads_iframe_/70432299/JCG_NotifBar_0" title="3rd party ad content" id="google_ads_iframe_/70432299/JCG_NotifBar_0" frameborder="0" height="50" width="1220"></iframe></div></div></div></td><td style="width: 80px;" class="foobar-close-button-container"><span style="height: 50px;" class="foobar-close-button"></span></td></tr></tbody></table><div class="foobar-shadow"></div><div style="height: 0px; bottom: auto; top: 0px; width: 80px; left: auto; right: 0px; display: block;" class="foobar-open-button-container hidden"><span style="background-color: rgb(64, 30, 64); border-width: medium 3px 3px; border-style: none solid solid; border-color: -moz-use-text-color rgb(255, 255, 255) rgb(255, 255, 255); -moz-border-top-colors: none; -moz-border-right-colors: none; -moz-border-bottom-colors: none; -moz-border-left-colors: none; border-image: none; height: 0px; margin-left: -17px; display: none;" class="foobar-open-button"></span></div></div><div class="background-cover"></div><div class="wrapper"><div class="top-nav fade-in animated1 head_menu"><div class="container"><div class="search-block"><form method="get" id="searchform" action="//www.javacodegeeks.com/"> <button class="search-button" type="submit" value="Search"></button> <input id="s" name="s" value="Search..." onfocus="if (this.value == 'Search...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search...';}" type="text"></form></div><div class="social-icons icon_flat"> <a original-title="Rss" class="tooldown" href="http://feeds.feedburner.com/JavaCodeGeeks" target="_blank"><i class="tieicon-rss"></i></a><a original-title="Google+" class="tooldown" href="https://plus.google.com/+JavaCodeGeeks/" target="_blank"><i class="tieicon-gplus"></i></a><a original-title="Facebook" class="tooldown" href="https://www.facebook.com/javacodegeeks" target="_blank"><i class="tieicon-facebook"></i></a><a original-title="Twitter" class="tooldown" href="https://twitter.com/javacodegeeks" target="_blank"><i class="tieicon-twitter"></i></a><a original-title="LinkedIn" class="tooldown" href="https://www.linkedin.com/groups/Java-Code-Geeks-3810709" target="_blank"><i class="tieicon-linkedin"></i></a><a original-title="Github" class="tooldown" href="https://github.com/javacodegeeks/" target="_blank"><i class="tieicon-github"></i></a></div><div class="top-menu"><ul id="menu-pages" class="menu"><li id="menu-item-38541" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-has-children menu-item-38541 parent-list"><a href="http://www.javacodegeeks.com/#">Knowledge Base <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38217" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38217 parent-list"><a href="https://www.javacodegeeks.com/tutorials/">Tutorials <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38218" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38218 parent-list"><a href="https://www.javacodegeeks.com/tutorials/java-tutorials/">Java Tutorials <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38219" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38219"><a href="https://www.javacodegeeks.com/tutorials/java-tutorials/core-java-tutorials/">Core Java Tutorials</a></li><li id="menu-item-38220" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38220 parent-list"><a href="https://www.javacodegeeks.com/tutorials/java-tutorials/enterprise-java-tutorials/">Enterprise Java Tutorials <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38221" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38221"><a href="https://www.javacodegeeks.com/tutorials/java-tutorials/enterprise-java-tutorials/spring-tutorials/">Spring Tutorials</a></li></ul></li><li id="menu-item-38222" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38222"><a href="https://www.javacodegeeks.com/tutorials/java-tutorials/desktop-java-tutorials/">Desktop Java Tutorials</a></li></ul></li><li id="menu-item-38223" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38223 parent-list"><a href="https://www.javacodegeeks.com/tutorials/android-tutorials/">Android Tutorials <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38224" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38224"><a href="https://www.javacodegeeks.com/tutorials/android-tutorials/android-core-tutorials/">Android Core Tutorials</a></li><li id="menu-item-38225" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38225"><a href="https://www.javacodegeeks.com/tutorials/android-tutorials/android-game-tutorials/">Android Game Tutorials</a></li></ul></li><li id="menu-item-38226" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38226"><a href="https://www.javacodegeeks.com/tutorials/scala-tutorials/">Scala Tutorials</a></li><li id="menu-item-38227" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38227"><a href="https://www.javacodegeeks.com/tutorials/devops-tutorials/">DevOps Tutorials</a></li><li id="menu-item-38228" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38228"><a href="https://www.javacodegeeks.com/tutorials/nosql-tutorials/">NoSQL Tutorials</a></li><li id="menu-item-38229" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38229"><a href="https://www.javacodegeeks.com/tutorials/groovy-grails-tutorials/">Groovy/Grails Tutorials</a></li></ul></li><li id="menu-item-38273" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-38273"><a href="http://examples.javacodegeeks.com/">Examples</a></li><li id="menu-item-45446" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-45446"><a href="https://www.javacodegeeks.com/courses/">Courses</a></li><li id="menu-item-38274" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-38274"><a href="http://www.javacodegeeks.com/whitepaper/">Whitepapers</a></li></ul></li><li id="menu-item-38243" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38243 parent-list"><a href="https://www.javacodegeeks.com/resources/">Resources <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38244" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38244"><a href="https://www.javacodegeeks.com/resources/software/">Software</a></li><li id="menu-item-38245" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38245"><a href="https://www.javacodegeeks.com/resources/our-projects/">Our Projects</a></li></ul></li><li id="menu-item-54369" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-54369"><a href="https://deals.javacodegeeks.com/">Deals</a></li><li id="menu-item-38240" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38240 parent-list"><a href="https://www.javacodegeeks.com/job-board/">Job Board <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38241" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38241"><a href="https://www.javacodegeeks.com/job-board/jobs/">Jobs</a></li></ul></li><li id="menu-item-38230" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38230 parent-list"><a href="https://www.javacodegeeks.com/join-us/">Join Us <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38231" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38231"><a href="https://www.javacodegeeks.com/join-us/jcg/">JCG</a></li><li id="menu-item-38232" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38232 parent-list"><a href="https://www.javacodegeeks.com/join-us/w4g/">W4G <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38233" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38233"><a href="https://www.javacodegeeks.com/join-us/w4g/submission-guidelines/">Submission Guidelines</a></li><li id="menu-item-38234" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38234"><a href="https://www.javacodegeeks.com/join-us/w4g/terms-conditions/">Terms &amp; Conditions</a></li></ul></li></ul></li><li id="menu-item-38235" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38235 parent-list"><a href="https://www.javacodegeeks.com/about/">About <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38236" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38236"><a href="https://www.javacodegeeks.com/about/about-jcgs/">About JCGs</a></li><li id="menu-item-38237" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38237"><a href="https://www.javacodegeeks.com/about/advertising/">Advertising</a></li><li id="menu-item-38238" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38238"><a href="https://www.javacodegeeks.com/about/terms-of-use/">Terms of Use</a></li><li id="menu-item-38239" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38239"><a href="https://www.javacodegeeks.com/about/privacy-policy/">Privacy Policy</a></li></ul></li></ul><select id="top-menu-mob"><option selected="selected" value="#">Go to...</option><option value="http://www.javacodegeeks.com/#">&nbsp;Knowledge Base </option><option value="https://www.javacodegeeks.com/tutorials/">&nbsp; &nbsp; –&nbsp;Tutorials </option><option value="https://www.javacodegeeks.com/tutorials/java-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Java Tutorials </option><option value="https://www.javacodegeeks.com/tutorials/java-tutorials/core-java-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Core Java Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/java-tutorials/enterprise-java-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Enterprise Java Tutorials </option><option value="https://www.javacodegeeks.com/tutorials/java-tutorials/enterprise-java-tutorials/spring-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Spring Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/java-tutorials/desktop-java-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Desktop Java Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/android-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Android Tutorials </option><option value="https://www.javacodegeeks.com/tutorials/android-tutorials/android-core-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Android Core Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/android-tutorials/android-game-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Android Game Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/scala-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Scala Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/devops-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;DevOps Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/nosql-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;NoSQL Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/groovy-grails-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Groovy/Grails Tutorials</option><option value="http://examples.javacodegeeks.com/">&nbsp; &nbsp; –&nbsp;Examples</option><option value="https://www.javacodegeeks.com/courses/">&nbsp; &nbsp; –&nbsp;Courses</option><option value="http://www.javacodegeeks.com/whitepaper/">&nbsp; &nbsp; –&nbsp;Whitepapers</option><option value="https://www.javacodegeeks.com/resources/">&nbsp;Resources </option><option value="https://www.javacodegeeks.com/resources/software/">&nbsp; &nbsp; –&nbsp;Software</option><option value="https://www.javacodegeeks.com/resources/our-projects/">&nbsp; &nbsp; –&nbsp;Our Projects</option><option value="https://deals.javacodegeeks.com/">&nbsp;Deals</option><option value="https://www.javacodegeeks.com/job-board/">&nbsp;Job Board </option><option value="https://www.javacodegeeks.com/job-board/jobs/">&nbsp; &nbsp; –&nbsp;Jobs</option><option value="https://www.javacodegeeks.com/join-us/">&nbsp;Join Us </option><option value="https://www.javacodegeeks.com/join-us/jcg/">&nbsp; &nbsp; –&nbsp;JCG</option><option value="https://www.javacodegeeks.com/join-us/w4g/">&nbsp; &nbsp; –&nbsp;W4G </option><option value="https://www.javacodegeeks.com/join-us/w4g/submission-guidelines/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Submission Guidelines</option><option value="https://www.javacodegeeks.com/join-us/w4g/terms-conditions/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Terms &amp; Conditions</option><option value="https://www.javacodegeeks.com/about/">&nbsp;About </option><option value="https://www.javacodegeeks.com/about/about-jcgs/">&nbsp; &nbsp; –&nbsp;About JCGs</option><option value="https://www.javacodegeeks.com/about/advertising/">&nbsp; &nbsp; –&nbsp;Advertising</option><option value="https://www.javacodegeeks.com/about/terms-of-use/">&nbsp; &nbsp; –&nbsp;Terms of Use</option><option value="https://www.javacodegeeks.com/about/privacy-policy/">&nbsp; &nbsp; –&nbsp;Privacy Policy</option></select></div></div></div><div class="container"> <header id="theme-header"><div class="header-content fade-in animated1"><div class="logo"><h2> <a title="Java Code Geeks" href="https://www.javacodegeeks.com/"> <img src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/JavaCodeGeeks-logo.png" alt="Java Code Geeks"><strong>Java Code Geeks Java Developers Resource Center</strong> </a></h2></div><div class="ads-top"><div id="div-gpt-ad-1415445260332-0" style="width: 728px; height: 90px;"><script type="text/javascript">googletag.cmd.push(function(){googletag.display('div-gpt-ad-1415445260332-0');});</script><iframe style="visibility: hidden; display: none;" src="https://tpc.googlesyndication.com/safeframe/1-0-2/html/container.html"></iframe><div style="border: 0pt none;" id="google_ads_iframe_/70432299/JCG_Header_0__container__"><iframe src="javascript:&quot;<html><body style='background:transparent'></body></html>&quot;" style="border: 0px none; vertical-align: bottom;" marginheight="0" marginwidth="0" scrolling="no" name="google_ads_iframe_/70432299/JCG_Header_0" title="3rd party ad content" id="google_ads_iframe_/70432299/JCG_Header_0" frameborder="0" height="90" width="728"></iframe></div><iframe src="javascript:&quot;<html><body style='background:transparent'></body></html>&quot;" style="border: 0px none; vertical-align: bottom; visibility: hidden; display: none;" marginheight="0" marginwidth="0" scrolling="no" name="google_ads_iframe_/70432299/JCG_Header_0__hidden__" title="" id="google_ads_iframe_/70432299/JCG_Header_0__hidden__" frameborder="0" height="0" width="0"></iframe></div></div><div class="clear"></div></div> <nav id="main-nav" class="fade-in animated2"><div class="container"><div class="main-menu"><ul id="menu-categories" class="menu"><li id="menu-item-38251" class="menu-item  menu-item-type-taxonomy  menu-item-object-category  menu-item-has-children parent-list"><a href="https://www.javacodegeeks.com/category/android/">Android <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38252" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/android/android-core/">Android Core</a></li><li id="menu-item-38253" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/android/android-games/">Android Games</a></li></ul></li><li id="menu-item-38257" class="menu-item  menu-item-type-taxonomy  menu-item-object-category  current-post-ancestor  menu-item-has-children parent-list"><a href="https://www.javacodegeeks.com/category/java/">Java <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38258" class="menu-item  menu-item-type-taxonomy  menu-item-object-category  current-post-ancestor  current-menu-parent  current-post-parent"><a href="https://www.javacodegeeks.com/category/java/core-java/">Core Java</a></li><li id="menu-item-38259" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/java/desktop-java/">Desktop Java</a></li><li id="menu-item-38260" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/java/enterprise-java/">Enterprise Java</a></li></ul></li><li id="menu-item-38261" class="menu-item  menu-item-type-taxonomy  menu-item-object-category  menu-item-has-children parent-list"><a href="https://www.javacodegeeks.com/category/jvm-languages/">JVM Languages <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38262" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/jvm-languages/ceylon/">Ceylon</a></li><li id="menu-item-38263" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/jvm-languages/clojure/">Clojure</a></li><li id="menu-item-38264" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/jvm-languages/groovy/">Groovy</a></li><li id="menu-item-38265" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/jvm-languages/jruby/">JRuby</a></li><li id="menu-item-38266" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/jvm-languages/kotlin/">Kotlin</a></li><li id="menu-item-38267" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/jvm-languages/scala/">Scala</a></li></ul></li><li id="menu-item-38271" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/software-development/">Software Development</a></li><li id="menu-item-38250" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/agile/">Agile</a></li><li id="menu-item-38254" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/career/">Career</a></li><li id="menu-item-38255" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/communications/">Communications</a></li><li id="menu-item-38256" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/devops/">DevOps</a></li><li id="menu-item-38268" class="menu-item  menu-item-type-taxonomy  menu-item-object-category  menu-item-has-children parent-list"><a href="https://www.javacodegeeks.com/category/meta-jcg/">Meta JCG <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38269" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/meta-jcg/best-of-the-week/">Best Of The Week</a></li><li id="menu-item-38270" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/misc/">Misc</a></li></ul></li></ul><select id="main-menu-mob"><option selected="selected" value="#">Go to...</option><option value="https://www.javacodegeeks.com/category/android/">&nbsp;Android </option><option value="https://www.javacodegeeks.com/category/android/android-core/">&nbsp; &nbsp; –&nbsp;Android Core</option><option value="https://www.javacodegeeks.com/category/android/android-games/">&nbsp; &nbsp; –&nbsp;Android Games</option><option value="https://www.javacodegeeks.com/category/java/">&nbsp;Java </option><option value="https://www.javacodegeeks.com/category/java/core-java/">&nbsp; &nbsp; –&nbsp;Core Java</option><option value="https://www.javacodegeeks.com/category/java/desktop-java/">&nbsp; &nbsp; –&nbsp;Desktop Java</option><option value="https://www.javacodegeeks.com/category/java/enterprise-java/">&nbsp; &nbsp; –&nbsp;Enterprise Java</option><option value="https://www.javacodegeeks.com/category/jvm-languages/">&nbsp;JVM Languages </option><option value="https://www.javacodegeeks.com/category/jvm-languages/ceylon/">&nbsp; &nbsp; –&nbsp;Ceylon</option><option value="https://www.javacodegeeks.com/category/jvm-languages/clojure/">&nbsp; &nbsp; –&nbsp;Clojure</option><option value="https://www.javacodegeeks.com/category/jvm-languages/groovy/">&nbsp; &nbsp; –&nbsp;Groovy</option><option value="https://www.javacodegeeks.com/category/jvm-languages/jruby/">&nbsp; &nbsp; –&nbsp;JRuby</option><option value="https://www.javacodegeeks.com/category/jvm-languages/kotlin/">&nbsp; &nbsp; –&nbsp;Kotlin</option><option value="https://www.javacodegeeks.com/category/jvm-languages/scala/">&nbsp; &nbsp; –&nbsp;Scala</option><option value="https://www.javacodegeeks.com/category/software-development/">&nbsp;Software Development</option><option value="https://www.javacodegeeks.com/category/agile/">&nbsp;Agile</option><option value="https://www.javacodegeeks.com/category/career/">&nbsp;Career</option><option value="https://www.javacodegeeks.com/category/communications/">&nbsp;Communications</option><option value="https://www.javacodegeeks.com/category/devops/">&nbsp;DevOps</option><option value="https://www.javacodegeeks.com/category/meta-jcg/">&nbsp;Meta JCG </option><option value="https://www.javacodegeeks.com/category/meta-jcg/best-of-the-week/">&nbsp; &nbsp; –&nbsp;Best Of The Week</option><option value="https://www.javacodegeeks.com/category/misc/">&nbsp; &nbsp; –&nbsp;Misc</option></select></div></div> </nav> </header><div id="main-content" class="container fade-in animated3 sidebar-narrow-left"><div class="content-wrap-wide"><div class="content"><div xmlns:v="http://rdf.data-vocabulary.org/#" id="crumbs"><span typeof="v:Breadcrumb"><a rel="v:url" property="v:title" class="crumbs-home" href="https://www.javacodegeeks.com/"><i class="tieicon-home"></i>Home</a></span> » <span typeof="v:Breadcrumb"><a rel="v:url" property="v:title" href="https://www.javacodegeeks.com/category/java/">Java</a></span> » <span typeof="v:Breadcrumb"><a rel="v:url" property="v:title" href="https://www.javacodegeeks.com/category/java/core-java/">Core Java</a></span> » <span class="current">Java 8 Features Tutorial – The ULTIMATE Guide (PDF Download)</span></div> <section id="author-box"><div class="block-head"><h3>About Andrey Redko</h3></div><div class="post-listing"><div class="author-avatar"> <img alt="Andrey Redko" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/Andrey-Redko_avatar-60x60.jpg" class="avatar avatar-60 photo" height="60" width="60"></div><div class="author-description">
 Andriy is a well-grounded software developer with more then 12 years of
 practical experience using Java/EE, C#/.NET, C++, Groovy, Ruby, 
functional programming (Scala), databases (MySQL, PostreSQL, Oracle) and
 NoSQL solutions (MongoDB, Redis).</div><div class="author-social"> <a original-title="Andrey Redko 's site" class="ttip" href="http://aredko.blogspot.com/"><img src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/author_site.png" alt="" height="18" width="18"></a> <a original-title="Andrey Redko   on Linkedin" class="ttip" href="http://ca.linkedin.com/in/aredko"><img src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/author_linkedin.png" alt="" height="18" width="18"></a></div><div class="clear"></div></div> </section> <article id="the-post" class="post-listing post-25097 post type-post status-publish format-standard has-post-thumbnail hentry category-core-java tag-java-8 tag-lambdas tag-ultimate"><div class="post-inner"><h1 class="name post-title entry-title" itemprop="itemReviewed" itemscope="" itemtype="http://schema.org/Thing"><span itemprop="name">Java 8 Features Tutorial – The ULTIMATE Guide (PDF Download)</span></h1><p class="post-meta"> <span class="post-meta-author">Posted by: <a href="https://www.javacodegeeks.com/author/Andrey-Redko/" title="">Andrey Redko </a></span> <span class="post-cats">in <a href="https://www.javacodegeeks.com/category/java/core-java/" rel="category tag">Core Java</a></span> <span class="tie-date">May 9th, 2014</span></p><div class="clear"></div><div class="entry"><div class="ads-post"><div id="div-gpt-ad-1415445260332-2" style="width: 300px; height: 250px; float: left; margin-right: 20px;"><script type="text/javascript">googletag.cmd.push(function(){googletag.display('div-gpt-ad-1415445260332-2');});</script><div style="border: 0pt none;" id="google_ads_iframe_/70432299/JCG_In-post_0__container__"><iframe src="javascript:&quot;<html><body style='background:transparent'></body></html>&quot;" style="border: 0px none; vertical-align: bottom;" marginheight="0" marginwidth="0" scrolling="no" name="google_ads_iframe_/70432299/JCG_In-post_0" title="3rd party ad content" id="google_ads_iframe_/70432299/JCG_In-post_0" frameborder="0" height="250" width="300"></iframe></div></div></div><p><em><strong>EDITORIAL NOTE:</strong> It’s been a while since Java 8 is out in the public and everything points to the fact that this is a really major release.</em></p><p><em>We have provided an abundance of tutorials here at Java Code Geeks, like <a href="http://www.javacodegeeks.com/2014/04/playing-with-java-8-lambdas-and-concurrency.html">Playing with Java 8 – Lambdas and Concurrency</a>, <a href="http://www.javacodegeeks.com/2014/04/java-8-date-time-api-tutorial-localdatetime.html">Java 8 Date Time API Tutorial : LocalDateTime</a> and <a href="http://www.javacodegeeks.com/2014/04/abstract-class-versus-interface-in-the-jdk-8-era.html">Abstract Class Versus Interface in the JDK 8 Era</a>.</em></p><p><em>We also referenced <a href="http://www.javacodegeeks.com/2014/04/15-must-read-java-8-tutorials.html">15 Must Read Java 8 Tutorials</a> from other sources. Of course, we examined some of the shortfalls also, like <a href="http://www.javacodegeeks.com/2014/04/java-8-friday-the-dark-side-of-java-8.html">The Dark Side of Java 8</a>.</em></p><p><em>Now, it is time to gather all the major Java 8 features under one reference post for your reading pleasure. Enjoy!</em><br><script type="text/javascript">(function(){if(!window.mc4wp){window.mc4wp={listeners:[],forms:{on:function(event,callback){window.mc4wp.listeners.push({event:event,callback:callback});}}}}})();</script></p><form id="mc4wp-form-1" class="mc4wp-form mc4wp-form-32369 mc4wp-form-theme mc4wp-form-theme-red mc4wp-ajax" method="post" data-id="32369" data-name="Java 8 Features"><div class="mc4wp-form-fields"><div class="nlbox" style="font-family: Tahoma,Arial,Verdana,sans-serif; font-size: 13px;"><h1 style="font-family: inherit; font-size: 2em; margin: 0; text-align: center;">Want to be a Java 8 Ninja ?</h1><div style="background: url('/wp-content/uploads/2014/10/Java-8-Features_book.png') no-repeat; float:left; padding: 75px 120px 240px; margin-top: -10px;"></div><table style="margin-top: 20px; border: none; background-color: inherit; width: inherit; font-family: inherit; padding-left: 20px;"><tbody><tr><td style="vertical-align:top; border: none; padding: 0; font-size: inherit;"><h2 style="font-family: inherit; font-size: 1.5em; margin: 0;">Subscribe to our newsletter and download the Java 8 Features <span style="color: #CAB43D; text-shadow: 1px 1px #835D5D;">Ultimate</span> Guide <span style="text-decoration: underline;">right now!</span></h2><h5>In
 order to get you up to speed with the major Java 8 release, we have 
compiled a kick-ass guide with all the new features and goodies! Besides
 studying them online you may download the eBook in PDF format!</h5><p>&nbsp;</p><p> <label for="mc4wp_email"><span style="font-weight: bold; font-size: 13pt;">Email address: </span></label> <input id="mc4wp_email" name="EMAIL" required="" placeholder="Your email address" type="email"></p> <input value="Sign up" type="submit"></td></tr></tbody></table></div><div style="display: none;"><input name="_mc4wp_honeypot" tabindex="-1" autocomplete="off" type="text"></div><input name="_mc4wp_timestamp" value="1459929576" type="hidden"><input name="_mc4wp_form_id" value="32369" type="hidden"><input name="_mc4wp_form_element_id" value="mc4wp-form-1" type="hidden"></div><div class="mc4wp-response"></div></form><div class="toc"><h3>Table Of Contents</h3><dl><dt><a href="#introduction">1. Introduction</a></dt><dt><a href="#new_features">2. New Features in Java language</a></dt><dd><dl><dt><a href="#lambdas_and_functional">2.1. Lambdas and Functional Interfaces</a></dt><dt><a href="#Interface_Default">2.2. Interface Default and Static Methods</a></dt><dt><a href="#method_references">2.3. Method References</a></dt><dt><a href="#repeating_annotations">2.4. Repeating annotations</a></dt><dt><a href="#better_type_inference">2.5. Better Type Inference</a></dt><dt><a href="#extended_annotations_support">2.6. Extended Annotations Support</a></dt></dl></dd><dt><a href="#new_features_in_java">3. New Features in Java compiler</a></dt><dd><dl><dt><a href="#parameter_names">3.1. Parameter names</a></dt></dl></dd><dt><a href="#New%20Features%20in%20Java%20libraries">4. New Features in Java libraries</a></dt><dd><dl><dt><a href="#Optional">4.1. Optional</a></dt><dt><a href="#streams">4.2. Streams</a></dt><dt><a href="#date/Time_API_%28JSR%20310%29">4.3. Date/Time API (JSR 310)</a></dt><dt><a href="#nashorn_JavaScript_engine">4.4. Nashorn JavaScript engine</a></dt><dt><a href="#base64">4.5. Base64</a></dt><dt><a href="#parallel_arrays">4.6. Parallel Arrays</a></dt><dt><a href="#concurrency">4.7. Concurrency</a></dt></dl></dd><dt><a href="#new_java_tools">5. New Java tools</a></dt><dd><dl><dt><a href="#nashorn_engine:%20jjs">5.1. Nashorn engine: jjs</a></dt><dt><a href="#class_dependency_analyzer:%20jdeps">5.2. Class dependency analyzer: jdeps</a></dt></dl></dd><dt><a href="#new_features_in_Java_runtime_%28JVM%29">6. New Features in Java runtime (JVM)</a></dt><dt><a href="#conclusions">7. Conclusions</a></dt><dt><a href="#Resources">8. Resources</a></dt></dl></div><p>&nbsp;</p><h1><a name="introduction"></a>1. Introduction</h1><p>With no doubts, <a href="http://www.oracle.com/technetwork/java/javase/8train-relnotes-latest-2153846.html">Java 8 release</a>
 is the greatest thing in the Java world since Java 5 (released quite a 
while ago, back in 2004). It brings tons of new features to the Java as a
 language, its compiler, libraries, tools and the JVM (Java virtual 
machine) itself. In this tutorial we are going to take a look on all 
these changes and demonstrate the different usage scenarios on real 
examples.</p><p>The tutorial consists of several parts where each one touches the specific side of the platform:</p><ul><li>language</li><li>compiler</li><li>libraries</li><li>tools</li><li>runtime (JVM)</li></ul><h1><a name="new_features"></a>2. New Features in Java language</h1><p>Java
 8 is by any means a major release. One might say it took so long to 
finalize in order to implement the features every Java developer was 
looking for. In this section we are going to cover most of them.</p><h2><a name="lambdas_and_functional"></a>2.1. Lambdas and Functional Interfaces</h2><p>Lambdas
 (also known as closures) are the biggest and most awaited language 
change in the whole Java 8 release. They allow us to treat functionality
 as a method argument (passing functions around), or treat a code as 
data: the concepts every <a href="http://www.javacodegeeks.com/2014/03/functional-programming-with-java-8-lambda-expressions-monads.html">functional developer</a> is very familiar with. Many languages on JVM platform (Groovy, <a href="http://www.javacodegeeks.com/tutorials/scala-tutorials/">Scala</a>,
 …) have had lambdas since day one, but Java developers had no choice 
but hammer the lambdas with boilerplate anonymous classes.</p><p>Lambdas
 design discussions have taken a lot of time and community efforts. But 
finally, the trade-offs have been found, leading to new concise and 
compact language constructs. In its simplest form, a lambda could be 
represented as a comma-separated list of parameters, the <strong>–&gt;</strong> symbol and the body. For example:</p><div class="syntaxhighlighter  " id="highlighter_724389"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">Arrays.asList( </code><code class="string">"a"</code><code class="plain">, </code><code class="string">"b"</code><code class="plain">, </code><code class="string">"d"</code> <code class="plain">).forEach( e -&gt; System.out.println( e ) );</code></td></tr></tbody></table></div></div></div><p>Please notice the type of argument <strong>e</strong>
 is being inferred by the compiler. Alternatively, you may explicitly 
provide the type of the parameter, wrapping the definition in brackets. 
For example:</p><div class="syntaxhighlighter  " id="highlighter_88338"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">Arrays.asList( </code><code class="string">"a"</code><code class="plain">, </code><code class="string">"b"</code><code class="plain">, </code><code class="string">"d"</code> <code class="plain">).forEach( ( String e ) -&gt; System.out.println( e ) );</code></td></tr></tbody></table></div></div></div><p>In
 case lambda’s body is more complex, it may be wrapped into square 
brackets, as the usual function definition in Java. For example:</p><div class="syntaxhighlighter  " id="highlighter_767859"><div class="bar  "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">Arrays.asList( </code><code class="string">"a"</code><code class="plain">, </code><code class="string">"b"</code><code class="plain">, </code><code class="string">"d"</code> <code class="plain">).forEach( e -&gt; {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.print( e );</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.print( e );</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="plain">} );</code></td></tr></tbody></table></div></div></div><p>Lambdas may reference the class members and local variables (implicitly making them effectively <strong>final </strong>if they are not). For example, those two snippets are equivalent:</p><div class="syntaxhighlighter  " id="highlighter_530887"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">String separator = </code><code class="string">","</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">Arrays.asList( </code><code class="string">"a"</code><code class="plain">, </code><code class="string">"b"</code><code class="plain">, </code><code class="string">"d"</code> <code class="plain">).forEach( </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">( String e ) -&gt; System.out.print( e + separator ) );</code></td></tr></tbody></table></div></div></div><p>And:</p><div class="syntaxhighlighter  " id="highlighter_170042"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="keyword">final</code> <code class="plain">String separator = </code><code class="string">","</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">Arrays.asList( </code><code class="string">"a"</code><code class="plain">, </code><code class="string">"b"</code><code class="plain">, </code><code class="string">"d"</code> <code class="plain">).forEach( </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">( String e ) -&gt; System.out.print( e + separator ) );</code></td></tr></tbody></table></div></div></div><p>Lambdas may return a value. The type of the return value will be inferred by compiler. The <strong>return</strong> statement is not required if the lambda body is just a one-liner. The two code snippets below are equivalent:</p><div class="syntaxhighlighter  " id="highlighter_32636"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">Arrays.asList( </code><code class="string">"a"</code><code class="plain">, </code><code class="string">"b"</code><code class="plain">, </code><code class="string">"d"</code> <code class="plain">).sort( ( e1, e2 ) -&gt; e1.compareTo( e2 ) );</code></td></tr></tbody></table></div></div></div><p>And:</p><div class="syntaxhighlighter  " id="highlighter_789362"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">Arrays.asList( </code><code class="string">"a"</code><code class="plain">, </code><code class="string">"b"</code><code class="plain">, </code><code class="string">"d"</code> <code class="plain">).sort( ( e1, e2 ) -&gt; {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">int</code> <code class="plain">result = e1.compareTo( e2 );</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="plain">result;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="plain">} );</code></td></tr></tbody></table></div></div></div><p>Language
 designers put a lot of thought on how to make already existing 
functionality lambda-friendly. As a result, the concept of <a href="http://www.javacodegeeks.com/2013/03/introduction-to-functional-interfaces-a-concept-recreated-in-java-8.html">functional interfaces</a>
 has emerged. The function interface is an interface with just one 
single method. As such, it may be implicitly converted to a lambda 
expression. The <strong>java.lang.Runnable</strong> and <strong>java.util.concurrent.Callable</strong>
 are two great examples of functional interfaces. In practice, the 
functional interfaces are fragile: if someone adds just one another 
method to the interface definition, it will not be functional anymore 
and compilation process will fail. To overcome this fragility and 
explicitly declare the intent of the interface as being functional, Java
 8 adds special annotation @FunctionalInterface (all existing interfaces
 in Java library have been annotated with @FunctionalInterface as well).
 Let us take a look on this simple functional interface definition:</p><div class="syntaxhighlighter  " id="highlighter_599658"><div class="bar  "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="color1">@FunctionalInterface</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">interface</code> <code class="plain">Functional {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">void</code> <code class="plain">method();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>One thing to keep in mind: <a href="#Interface_Default">default and static methods</a> do not break the functional interface contract and may be declared:</p><div class="syntaxhighlighter  " id="highlighter_223652"><div class="bar      "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="color1">@FunctionalInterface</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">interface</code> <code class="plain">FunctionalDefaultMethods {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">void</code> <code class="plain">method();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>5</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">default</code> <code class="keyword">void</code> <code class="plain">defaultMethod() {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>6</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>7</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>Lambdas
 are the largest selling point of Java 8. It has all the potential to 
attract more and more developers to this great platform and provide 
state of the art support for functional programming concepts in pure 
Java. For more details please refer to <a href="http://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html">official documentation</a>.</p><h2><a name="Interface_Default"></a>2.2. Interface’s Default and Static Methods</h2><p>Java 8 extends interface declarations with two new concepts: default and static methods. <a href="http://www.javacodegeeks.com/2014/04/java-8-default-methods-what-can-and-can-not-do.html">Default methods</a>
 make interfaces somewhat similar to traits but serve a bit different 
goal. They allow adding new methods to existing interfaces without 
breaking the binary compatibility with the code written for older 
versions of those interfaces.</p><p>The difference between default 
methods and abstract methods is that abstract methods are required to be
 implemented. But default methods are not. Instead, each interface must 
provide so called default implementation and all the implementers will 
inherit it by default (with a possibility to override this default 
implementation if needed). Let us take a look on example below.</p><div class="syntaxhighlighter  " id="highlighter_530629"><div class="bar          "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">private</code> <code class="keyword">interface</code> <code class="plain">Defaulable {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// Interfaces now allow default methods, the implementer may or </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// may not implement (override) them.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">default</code> <code class="plain">String notRequired() { </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="string">"Default implementation"</code><code class="plain">; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="keyword">private</code> <code class="keyword">static</code> <code class="keyword">class</code> <code class="plain">DefaultableImpl </code><code class="keyword">implements</code> <code class="plain">Defaulable {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="keyword">private</code> <code class="keyword">static</code> <code class="keyword">class</code> <code class="plain">OverridableImpl </code><code class="keyword">implements</code> <code class="plain">Defaulable {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Override</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="plain">String notRequired() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="string">"Overridden implementation"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>The interface <strong>Defaulable</strong> declares a default method <strong>notRequired() </strong>using keyword <strong>default</strong> as part of the method definition. One of the classes, <strong>DefaultableImpl</strong>, implements this interface leaving the default method implementation as-is. Another one, <strong>OverridableImpl</strong> , overrides the default implementation and provides its own.</p><p>Another
 interesting feature delivered by Java 8 is that interfaces can declare 
(and provide implementation) of static methods. Here is an example.</p><div class="syntaxhighlighter  " id="highlighter_281680"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="keyword">private</code> <code class="keyword">interface</code> <code class="plain">DefaulableFactory {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// Interfaces now allow static methods</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">static</code> <code class="plain">Defaulable create( Supplier&lt; Defaulable &gt; supplier ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="plain">supplier.get();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>5</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>6</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>The small code snippet below glues together the default methods and static methods from the examples above.</p><div class="syntaxhighlighter  " id="highlighter_457861"><div class="bar     "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">void</code> <code class="plain">main( String[] args ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Defaulable defaulable = DefaulableFactory.create( DefaultableImpl::</code><code class="keyword">new</code> <code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println( defaulable.notRequired() );</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>5</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">defaulable = DefaulableFactory.create( OverridableImpl::</code><code class="keyword">new</code> <code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>6</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println( defaulable.notRequired() );</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>7</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>The console output of this program looks like that:</p><div class="syntaxhighlighter  " id="highlighter_29268"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">Default implementation</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">Overridden implementation</code></td></tr></tbody></table></div></div></div><p>Default
 methods implementation on JVM is very efficient and is supported by the
 byte code instructions for method invocation. Default methods allowed 
existing Java interfaces to evolve without breaking the compilation 
process. The good examples are the plethora of methods added to <strong>java.util.Collection</strong> interface: <strong>stream()</strong>, <strong>parallelStream()</strong>, <strong>forEach()</strong>, <strong>removeIf()</strong>, …</p><p>Though
 being powerful, default methods should be used with a caution: before 
declaring method as default it is better to think twice if it is really 
needed as it may cause ambiguity and compilation errors in complex 
hierarchies. For more details please refer to <a href="http://docs.oracle.com/javase/tutorial/java/IandI/defaultmethods.html">official documentation</a>.</p><h2><a name="method_references"></a>2.3. Method References</h2><p>Method
 references provide the useful syntax to refer directly to exiting 
methods or constructors of Java classes or objects (instances). With 
conjunction of <a href="#lambdas_and_functional">Lambdas</a> expressions, method references make the language constructs look compact and concise, leaving off boilerplate.</p><p>Below, considering the class <strong>Car </strong>as an example of different method definitions, let us distinguish four supported types of method references.</p><div class="syntaxhighlighter  " id="highlighter_168101"><div class="bar     "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">class</code> <code class="plain">Car {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">static</code> <code class="plain">Car create( </code><code class="keyword">final</code> <code class="plain">Supplier&lt; Car &gt; supplier ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="plain">supplier.get();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">void</code> <code class="plain">collide( </code><code class="keyword">final</code> <code class="plain">Car car ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println( </code><code class="string">"Collided "</code> <code class="plain">+ car.toString() );</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">follow( </code><code class="keyword">final</code> <code class="plain">Car another ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println( </code><code class="string">"Following the "</code> <code class="plain">+ another.toString() );</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">repair() {&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println( </code><code class="string">"Repaired "</code> <code class="plain">+ </code><code class="keyword">this</code><code class="plain">.toString() );</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>The first type of method references is constructor reference with the syntax <strong>Class::new</strong> or alternatively, for generics, <strong>Class&lt; T &gt;::new</strong>. Please notice that the constructor has no arguments.</p><div class="syntaxhighlighter  " id="highlighter_156349"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="keyword">final</code> <code class="plain">Car car = Car.create( Car::</code><code class="keyword">new</code> <code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="keyword">final</code> <code class="plain">List&lt; Car &gt; cars = Arrays.asList( car );</code></td></tr></tbody></table></div></div></div><p>The second type is reference to static method with the syntax <strong>Class::static_method</strong>. Please notice that the method accepts exactly one parameter of type <strong>Car</strong>.</p><div class="syntaxhighlighter  " id="highlighter_649554"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">cars.forEach( Car::collide );</code></td></tr></tbody></table></div></div></div><p>The third type is reference to instance method of arbitrary object of specific type with the syntax <strong>Class::method</strong>. Please notice, no arguments are accepted by the method.</p><div class="syntaxhighlighter  " id="highlighter_68495"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">cars.forEach( Car::repair );</code></td></tr></tbody></table></div></div></div><p>And the last, fourth type is reference to instance method of particular class instance the syntax <strong>instance::method</strong>. Please notice that method accepts exactly one parameter of type <strong>Car</strong>.</p><div class="syntaxhighlighter  " id="highlighter_685043"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="keyword">final</code> <code class="plain">Car police = Car.create( Car::</code><code class="keyword">new</code> <code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">cars.forEach( police::follow );</code></td></tr></tbody></table></div></div></div><p>Running all those examples as a Java program produces following output on a console (the actual <strong>Car</strong> instances might be different):</p><div class="syntaxhighlighter  " id="highlighter_624734"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">Collided com.javacodegeeks.java8.method.references.MethodReferences$Car</code><code class="color1">@7a81197d</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">Repaired com.javacodegeeks.java8.method.references.MethodReferences$Car</code><code class="color1">@7a81197d</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="plain">Following the com.javacodegeeks.java8.method.references.MethodReferences$Car</code><code class="color1">@7a81197d</code></td></tr></tbody></table></div></div></div><p>For more examples and details on method references, please refer to <a href="http://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html">official documentation.</a></p><h2><a name="repeating_annotations"></a>2.4. Repeating annotations</h2><p>Since Java 5 introduced the <a href="http://www.javacodegeeks.com/2012/08/java-annotations-explored-explained.html">annotations support</a>,
 this feature became very popular and is very widely used. However, one 
of the limitations of annotation usage was the fact that the same 
annotation cannot be declared more than once at the same location. Java 8
 breaks this rule and introduced the repeating annotations. It allows 
the same annotation to be repeated several times in place it is 
declared.</p><p>The repeating annotations should be themselves annotated
 with @Repeatable annotation. In fact, it is not a language change but 
more a compiler trick as underneath the technique stays the same. Let us
 take a look on quick example:</p><div class="syntaxhighlighter  " id="highlighter_617098"><div class="bar            "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">com.javacodegeeks.java8.repeatable.annotations;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.lang.annotation.ElementType;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.lang.annotation.Repeatable;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.lang.annotation.Retention;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.lang.annotation.RetentionPolicy;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.lang.annotation.Target;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">RepeatingAnnotations {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Target</code><code class="plain">( ElementType.TYPE )</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Retention</code><code class="plain">( RetentionPolicy.RUNTIME )</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="color2">@interface</code> <code class="plain">Filters {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Filter[] value();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Target</code><code class="plain">( ElementType.TYPE )</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Retention</code><code class="plain">( RetentionPolicy.RUNTIME )</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Repeatable</code><code class="plain">( Filters.</code><code class="keyword">class</code> <code class="plain">)</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="color2">@interface</code> <code class="plain">Filter {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">String value();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">};</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Filter</code><code class="plain">( </code><code class="string">"filter1"</code> <code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>24</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Filter</code><code class="plain">( </code><code class="string">"filter2"</code> <code class="plain">)</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>25</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">interface</code> <code class="plain">Filterable {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>26</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>27</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>28</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">void</code> <code class="plain">main(String[] args) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>29</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">for</code><code class="plain">( Filter filter: Filterable.</code><code class="keyword">class</code><code class="plain">.getAnnotationsByType( Filter.</code><code class="keyword">class</code> <code class="plain">) ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>30</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println( filter.value() );</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>31</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>32</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>33</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>As we can see, there is an annotation class <strong>Filter</strong> annotated with @Repeatable( Filters.<strong>class</strong> ). The <strong>Filters </strong>is just a holder of <strong>Filter</strong> annotations but Java compiler tries hard to hide its presence from the developers. As such, the interface <strong>Filterable</strong> has <strong>Filter</strong> annotation defined twice (with no mentions of <strong>Filters</strong>).</p><p>Also, the Reflection API provides new method <strong>getAnnotationsByType()</strong> to return repeating annotations of some type (please notice that Filterable.<strong>class</strong>.getAnnotation( Filters.<strong>class</strong> ) will return the instance of <strong>Filters </strong>injected by the compiler).</p><p>The program output looks like that:</p><div class="syntaxhighlighter  " id="highlighter_620489"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">filter1</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">filter2</code></td></tr></tbody></table></div></div></div><p>For more details please refer to <a href="http://docs.oracle.com/javase/tutorial/java/annotations/repeating.html">official documentation</a>.</p><h2><a name="better_type_inference"></a>2.5. Better Type Inference</h2><p>Java
 8 compiler has improved a lot on type inference. In many cases the 
explicit type parameters could be inferred by compiler keeping the code 
cleaner. Let us take a look on one of the examples.</p><div class="syntaxhighlighter  " id="highlighter_650840"><div class="bar      "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">com.javacodegeeks.java8.type.inference;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">Value&lt; T &gt; {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">static</code><code class="plain">&lt; T &gt; T defaultValue() { </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="keyword">null</code><code class="plain">; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="plain">T getOrDefault( T value, T defaultValue ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="plain">( value != </code><code class="keyword">null</code> <code class="plain">) ? value : defaultValue;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>And here is the usage of <strong>Value&lt; String &gt;</strong> type.</p><div class="syntaxhighlighter  " id="highlighter_437780"><div class="bar  "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="keyword">package</code> <code class="plain">com.javacodegeeks.java8.type.inference;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">TypeInference {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">void</code> <code class="plain">main(String[] args) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>5</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">final</code> <code class="plain">Value&lt; String &gt; value = </code><code class="keyword">new</code> <code class="plain">Value&lt;&gt;();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>6</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">value.getOrDefault( </code><code class="string">"22"</code><code class="plain">, Value.defaultValue() );</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>7</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>8</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>The type parameter of <strong>Value.<em>defaultValue</em>()</strong>is inferred and is not required to be provided. In Java 7, the same example will not compile and should be rewritten to <strong>Value.&lt; String &gt;<em>defaultValue</em>()</strong>.</p><h2><a name="extended_annotations_support"></a>2.6. Extended Annotations Support</h2><p>Java
 8 extends the context where annotation might be used. Now, it is 
possible to annotate mostly everything: local variables, generic types, 
super-classes and implementing interfaces, even the method’s exceptions 
declaration. Couple of examples are show below.</p><div class="syntaxhighlighter  " id="highlighter_273135"><div class="bar        "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">com.javacodegeeks.java8.annotations;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.lang.annotation.ElementType;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.lang.annotation.Retention;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.lang.annotation.RetentionPolicy;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.lang.annotation.Target;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.util.ArrayList;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.util.Collection;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">Annotations {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Retention</code><code class="plain">( RetentionPolicy.RUNTIME )</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Target</code><code class="plain">( { ElementType.TYPE_USE, ElementType.TYPE_PARAMETER } )</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="color2">@interface</code> <code class="plain">NonEmpty {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">class</code> <code class="plain">Holder&lt; </code><code class="color1">@NonEmpty</code> <code class="plain">T &gt; </code><code class="keyword">extends</code> <code class="color1">@NonEmpty</code> <code class="plain">Object {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">method() </code><code class="keyword">throws</code> <code class="color1">@NonEmpty</code> <code class="plain">Exception {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@SuppressWarnings</code><code class="plain">( </code><code class="string">"unused"</code> <code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">void</code> <code class="plain">main(String[] args) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">final</code> <code class="plain">Holder&lt; String &gt; holder = </code><code class="keyword">new</code> <code class="color1">@NonEmpty</code> <code class="plain">Holder&lt; String &gt;();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>24</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@NonEmpty</code> <code class="plain">Collection&lt; </code><code class="color1">@NonEmpty</code> <code class="plain">String &gt; strings = </code><code class="keyword">new</code> <code class="plain">ArrayList&lt;&gt;();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>25</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>26</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>The <strong>ElementType.</strong><strong><em>TYPE_USE </em></strong>and <strong>ElementType.</strong><strong><em>TYPE_PARAMETER </em></strong>are two new element types to describe the applicable annotation context. The <strong>Annotation Processing API</strong> also underwent some minor changes to recognize those new type annotations in the Java programming language.</p><h1><a name="new_features_in_java"></a>3. New Features in Java compiler</h1><h2><a name="parameter_names"></a>3.1. Parameter names</h2><p>Literally for ages Java developers are inventing different ways to preserve <a href="http://www.javacodegeeks.com/2014/04/constructormethod-parameters-metadata-available-via-reflection-in-jdk-8.html">method parameter names in Java byte-code</a> and make them available at runtime (for example, <a href="https://github.com/paul-hammant/paranamer">Paranamer library</a>). And finally, Java 8 bakes this demanding feature into the language (using Reflection API and <strong>Parameter.getName()</strong> method) and the byte-code (using new <strong>javac</strong> compiler argument <strong>–parameters</strong>).</p><div class="syntaxhighlighter  " id="highlighter_852468"><div class="bar     "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">com.javacodegeeks.java8.parameter.names;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.lang.reflect.Method;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.lang.reflect.Parameter;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">ParameterNames {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">void</code> <code class="plain">main(String[] args) </code><code class="keyword">throws</code> <code class="plain">Exception {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Method method = ParameterNames.</code><code class="keyword">class</code><code class="plain">.getMethod( </code><code class="string">"main"</code><code class="plain">, String[].</code><code class="keyword">class</code> <code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">for</code><code class="plain">( </code><code class="keyword">final</code> <code class="plain">Parameter parameter: method.getParameters() ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println( </code><code class="string">"Parameter: "</code> <code class="plain">+ parameter.getName() );</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>If you compile this class without using <strong>–parameters</strong> argument and then run this program, you will see something like that:</p><div class="syntaxhighlighter  " id="highlighter_927702"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">Parameter: arg0</code></td></tr></tbody></table></div></div></div><p>With <strong>–parameters</strong> argument passed to the compiler the program output will be different (the actual name of the parameter will be shown):</p><div class="syntaxhighlighter  " id="highlighter_994234"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">Parameter: args</code></td></tr></tbody></table></div></div></div><p>For <a href="http://www.javacodegeeks.com/tag/apache-maven/">experienced Maven users</a> the <strong>–parameters</strong> argument could be added to the compiler using configuration section of the <strong>maven-compiler-plugin</strong>:</p><div class="syntaxhighlighter  " id="highlighter_881708"><div class="bar  "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="plain">&lt;</code><code class="keyword">plugin</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">groupId</code><code class="plain">&gt;org.apache.maven.plugins&lt;/</code><code class="keyword">groupId</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">artifactId</code><code class="plain">&gt;maven-compiler-plugin&lt;/</code><code class="keyword">artifactId</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">version</code><code class="plain">&gt;3.1&lt;/</code><code class="keyword">version</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">configuration</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">compilerArgument</code><code class="plain">&gt;-parameters&lt;/</code><code class="keyword">compilerArgument</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">source</code><code class="plain">&gt;1.8&lt;/</code><code class="keyword">source</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">target</code><code class="plain">&gt;1.8&lt;/</code><code class="keyword">target</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">configuration</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="plain">&lt;/</code><code class="keyword">plugin</code><code class="plain">&gt;</code></td></tr></tbody></table></div></div></div><p>Latest <strong>Eclipse Kepler SR2</strong> release with Java 8 (please check out <a href="http://www.eclipse.org/downloads/java8/">this download instructions</a>) support provides useful configuration option to control this compiler setting as the picture below shows.</p><div id="attachment_25098" style="width: 310px" class="wp-caption aligncenter"><a href="http://www.javacodegeeks.com/wp-content/uploads/2014/05/01.ECLIPSE-JAVA-COMPILER.png"><img class="size-medium wp-image-25098" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/01.png" alt="Picture 1. Configuring Eclipse projects to support new Java 8 compiler –parameters argument." srcset="//www.javacodegeeks.com/wp-content/uploads/2014/05/01.ECLIPSE-JAVA-COMPILER-300x242.png 300w, //www.javacodegeeks.com/wp-content/uploads/2014/05/01.ECLIPSE-JAVA-COMPILER.png 972w" sizes="(max-width: 300px) 100vw, 300px" height="242" width="300"></a><p class="wp-caption-text"><strong>Picture 1</strong>. Configuring Eclipse projects to support new Java 8 compiler <strong>–parameters</strong> argument.</p></div><p>Additionally, to verify the availability of parameter names, there is a handy method <strong>isNamePresent()</strong> provided by <strong>Parameter </strong>class.</p><h1><a name="New Features in Java libraries"></a>4. New Features in Java libraries</h1><p>Java
 8 adds a lot of new classes and extends existing ones in order to 
provide better support of modern concurrency, functional programming, 
date/time, and many more.</p><h2><a name="Optional"></a>4.1. Optional</h2><p>The <a href="http://examples.javacodegeeks.com/java-basics/exceptions/java-lang-nullpointerexception-how-to-handle-null-pointer-exception/">famous <strong>NullPointerException</strong></a> is by far the most popular cause of Java application failures. Long time ago the great <a href="http://code.google.com/p/guava-libraries/">Google Guava</a> project introduced the <strong>Optional</strong>s as a solution to <strong>NullPointerException</strong>s, discouraging codebase pollution with <strong>null</strong> checks and encouraging developers to write cleaner code. Inspired by <a href="http://code.google.com/p/guava-libraries/">Google Guava</a>, the <strong>Optional</strong> is now a part of Java 8 library.</p><p><strong>Optional </strong>is just a container: it can hold a <strong>value</strong> of some type <strong>T</strong> or just be <strong>null</strong>. It provides a lot of useful methods so the explicit <strong>null</strong> checks have no excuse anymore. Please refer to <a href="http://docs.oracle.com/javase/8/docs/api/">official Java 8 documentation</a> for more details.</p><p>We are going to take a look on two small examples of <strong>Optional</strong> usages: with the <strong>nullable</strong> value and with the value which does not allow <strong>null</strong>s.</p><div class="syntaxhighlighter  " id="highlighter_231886"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">Optional&lt; </code><code class="keyword">String</code> <code class="plain">&gt; fullName = Optional.ofNullable( null );</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">System.out.println( "Full Name is set? " + fullName.isPresent() );&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="plain">System.out.println( "Full Name: " + fullName.orElseGet( () -&gt; "[none]" ) ); </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="plain">System.out.println( fullName.map( s -&gt; "Hey " + s + "!" ).orElse( "Hey Stranger!" ) );</code></td></tr></tbody></table></div></div></div><p>The <strong>isPresent() </strong>method returns <strong>true</strong> if this instance of <strong>Optional</strong> has non-null value and <strong>false</strong> otherwise. The <strong>orElseGet() </strong>method provides the fallback mechanism in case <strong>Optional</strong> has <strong>null</strong> value by accepting the function to generate the default one. The <strong>map()</strong> method transforms the current <strong>Optional</strong>’s value and returns the new <strong>Optional</strong> instance. The <strong>orElse() </strong>method is similar to <strong>orElseGet() </strong>but instead of function it accepts the default value. Here is the output of this program:</p><div class="syntaxhighlighter  " id="highlighter_998663"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">Full Name is set? </code><code class="keyword">false</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">Full Name: [none]</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="plain">Hey Stranger!</code></td></tr></tbody></table></div></div></div><p>Let us briefly look on another example:</p><div class="syntaxhighlighter  " id="highlighter_652058"><div class="bar    "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">Optional&lt; </code><code class="keyword">String</code> <code class="plain">&gt; firstName = Optional.of( "Tom" );</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">System.out.println( "First Name is set? " + firstName.isPresent() );&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="plain">System.out.println( "First Name: " + firstName.orElseGet( () -&gt; "[none]" ) ); </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="plain">System.out.println( firstName.map( s -&gt; "Hey " + s + "!" ).orElse( "Hey Stranger!" ) );</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>5</code></td><td class="content"><code class="plain">System.out.println();</code></td></tr></tbody></table></div></div></div><p>And here is the output:</p><div class="syntaxhighlighter  " id="highlighter_965854"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">First Name is set? </code><code class="keyword">true</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">First Name: Tom</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="plain">Hey Tom!</code></td></tr></tbody></table></div></div></div><p>For more details please refer to <a href="http://docs.oracle.com/javase/8/docs/api/java/util/Optional.html">official documentation.</a></p><h2><a name="streams"></a>4.2. Streams</h2><p>The newly <a href="http://www.javacodegeeks.com/2014/05/the-effects-of-programming-with-java-8-streams-on-algorithm-performance.html">added Stream API</a> (<strong>java.util.stream</strong>)
 introduces real-world functional-style programming into the Java. This 
is by far the most comprehensive addition to Java library intended to 
make Java developers significantly more productive by allowing them to 
write effective, clean, and concise code.</p><p>Stream API makes 
collections processing greatly simplified (but it is not limited to Java
 collections only as we will see later). Let us take start off with 
simple class called Task.</p><div class="syntaxhighlighter  " id="highlighter_775749"><div class="bar                "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">Streams&nbsp; {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">private</code> <code class="keyword">enum</code> <code class="plain">Status {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">OPEN, CLOSED</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">};</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">private</code> <code class="keyword">static</code> <code class="keyword">final</code> <code class="keyword">class</code> <code class="plain">Task {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">private</code> <code class="keyword">final</code> <code class="plain">Status status;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">private</code> <code class="keyword">final</code> <code class="plain">Integer points;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Task( </code><code class="keyword">final</code> <code class="plain">Status status, </code><code class="keyword">final</code> <code class="plain">Integer points ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">this</code><code class="plain">.status = status;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">this</code><code class="plain">.points = points;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="plain">Integer getPoints() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="plain">points;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="plain">Status getStatus() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="plain">status;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Override</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>24</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="plain">String toString() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>25</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="plain">String.format( </code><code class="string">"[%s, %d]"</code><code class="plain">, status, points );</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>26</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>27</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>28</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>Task has some notion of points (or pseudo-complexity) and can be either <strong><em>OPEN</em></strong> or <strong><em>CLOSED</em></strong>. And then let us introduce a small collection of tasks to play with.</p><div class="syntaxhighlighter  " id="highlighter_376888"><div class="bar  "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="keyword">final</code> <code class="plain">Collection&lt; Task &gt; tasks = Arrays.asList(</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">new</code> <code class="plain">Task( Status.OPEN, </code><code class="value">5</code> <code class="plain">),</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">new</code> <code class="plain">Task( Status.OPEN, </code><code class="value">13</code> <code class="plain">),</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">new</code> <code class="plain">Task( Status.CLOSED, </code><code class="value">8</code> <code class="plain">) </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>5</code></td><td class="content"><code class="plain">);</code></td></tr></tbody></table></div></div></div><p>The first question we are going to address is how many points in total all <strong><em>OPEN</em></strong> tasks have? Up to Java 8, the usual solution for it would be some sort of <strong>foreach</strong>
 iteration. But in Java 8 the answers is streams: a sequence of elements
 supporting sequential and parallel aggregate operations.</p><div class="syntaxhighlighter  " id="highlighter_295927"><div class="bar     "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="comments">// Calculate total points of all active tasks using sum()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="keyword">final</code> <code class="keyword">long</code> <code class="plain">totalPointsOfOpenTasks = tasks</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">.stream()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">.filter( task -&gt; task.getStatus() == Status.OPEN )</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>5</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">.mapToInt( Task::getPoints )</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>6</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">.sum();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>7</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>8</code></td><td class="content"><code class="plain">System.out.println( </code><code class="string">"Total points: "</code> <code class="plain">+ totalPointsOfOpenTasks );</code></td></tr></tbody></table></div></div></div><p>And the output on the console looks like that:</p><div class="syntaxhighlighter  " id="highlighter_193598"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">Total points: </code><code class="value">18</code></td></tr></tbody></table></div></div></div><p>There are a couple of things going on here. Firstly, the tasks collection is converted to its stream representation. Then, the <strong>filter</strong> operation on stream filters out all <strong><em>CLOSED</em></strong> tasks. On next step, the <strong>mapToInt</strong> operation converts the stream of <strong>Task</strong>s to the stream of <strong>Integer</strong>s using <strong>Task::getPoints</strong> method of the each task instance. And lastly, all points are summed up using <strong>sum</strong> method, producing the final result.</p><p>Before moving on to the next examples, there are some notes to keep in mind about streams (<a href="http://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html#StreamOps">more details here</a>). Stream operations are divided into intermediate and terminal operations.</p><p>Intermediate operations return a new stream. They are always lazy, executing an intermediate operation such as <strong>filter</strong>
 does not actually perform any filtering, but instead creates a new 
stream that, when traversed, contains the elements of the initial stream
 that match the given predicate</p><p>Terminal operations, such as <strong>forEach</strong> or <strong>sum</strong>,
 may traverse the stream to produce a result or a side-effect. After the
 terminal operation is performed, the stream pipeline is considered 
consumed, and can no longer be used. In almost all cases, terminal 
operations are eager, completing their traversal of the underlying data 
source.</p><p>Yet another value proposition of the streams is out-of-the
 box support of parallel processing. Let us take a look on this example,
 which does sums the points of all the tasks.</p><div class="syntaxhighlighter  " id="highlighter_332068"><div class="bar   "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="comments">// Calculate total points of all tasks</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="keyword">final</code> <code class="keyword">double</code> <code class="plain">totalPoints = tasks</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="plain">.stream()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="plain">.parallel()</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>5</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="plain">.map( task -&gt; task.getPoints() ) </code><code class="comments">// or map( Task::getPoints ) </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>6</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="plain">.reduce( </code><code class="value">0</code><code class="plain">, Integer::sum );</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>7</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>8</code></td><td class="content"><code class="plain">System.out.println( </code><code class="string">"Total points (all tasks): "</code> <code class="plain">+ totalPoints );</code></td></tr></tbody></table></div></div></div><p>It is very similar to the first example except the fact that we try to process all the tasks in <strong>parallel</strong> and calculate the final result using <strong>reduce</strong> method.</p><p>Here is the console output:</p><div class="syntaxhighlighter  " id="highlighter_955318"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">Total points (all tasks): </code><code class="value">26.0</code></td></tr></tbody></table></div></div></div><p>Often,
 there is a need to performing a grouping of the collection elements by 
some criteria. Streams can help with that as well as an example below 
demonstrates.</p><div class="syntaxhighlighter  " id="highlighter_858838"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="comments">// Group tasks by their status</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="keyword">final</code> <code class="plain">Map&lt; Status, List&lt; Task &gt; &gt; map = tasks</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">.stream()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">.collect( Collectors.groupingBy( Task::getStatus ) );</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>5</code></td><td class="content"><code class="plain">System.out.println( map );</code></td></tr></tbody></table></div></div></div><p>The console output of this example looks like that:</p><div class="syntaxhighlighter  " id="highlighter_813075"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">{CLOSED=[[CLOSED, </code><code class="value">8</code><code class="plain">]], OPEN=[[OPEN, </code><code class="value">5</code><code class="plain">], [OPEN, </code><code class="value">13</code><code class="plain">]]}</code></td></tr></tbody></table></div></div></div><p>To
 finish up with the tasks example, let us calculate the overall 
percentage (or weight) of each task across the whole collection, based 
on its points.</p><div class="syntaxhighlighter  " id="highlighter_837185"><div class="bar     "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="comments">// Calculate the weight of each tasks (as percent of total points) </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content"><code class="keyword">final</code> <code class="plain">Collection&lt; String &gt; result = tasks</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">.stream()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code><code class="comments">// Stream&lt; String &gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">.mapToInt(
 Task::getPoints 
)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code><code class="comments">// IntStream</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">.asLongStream()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code><code class="comments">// LongStream</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">.mapToDouble( points -&gt; points / totalPoints )&nbsp;&nbsp; </code><code class="comments">// DoubleStream</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">.boxed()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code><code class="comments">// Stream&lt; Double &gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">.mapToLong( weigth -&gt; ( </code><code class="keyword">long</code> <code class="plain">)( weigth * </code><code class="value">100</code> <code class="plain">) ) </code><code class="comments">// LongStream</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">.mapToObj( percentage -&gt; percentage + </code><code class="string">"%"</code> <code class="plain">)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">// Stream&lt; String&gt; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">.collect(
 Collectors.toList() 
);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code><code class="comments">// List&lt; String &gt; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="plain">System.out.println( result );</code></td></tr></tbody></table></div></div></div><p>The console output is just here:</p><div class="syntaxhighlighter  " id="highlighter_150702"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">[</code><code class="value">19</code><code class="plain">%, </code><code class="value">50</code><code class="plain">%, </code><code class="value">30</code><code class="plain">%]</code></td></tr></tbody></table></div></div></div><p>And
 lastly, as we mentioned before, the Stream API is not only about Java 
collections. The typical I/O operations like reading the text file line 
by line is a very good candidate to benefit from stream processing. Here
 is a small example to confirm that.</p><div class="syntaxhighlighter  " id="highlighter_816626"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="keyword">final</code> <code class="plain">Path path = </code><code class="keyword">new</code> <code class="plain">File( filename ).toPath();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="keyword">try</code><code class="plain">( Stream&lt; String &gt; lines = Files.lines( path, StandardCharsets.UTF_8 ) ) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">lines.onClose( () -&gt; System.out.println(</code><code class="string">"Done!"</code><code class="plain">) ).forEach( System.out::println );</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>The <strong>onClose</strong> method called on the stream returns an equivalent stream with an additional close handler. Close handlers are run when the <strong>close()</strong> method is called on the stream.</p><p>Stream API together with <a href="#lambdas_and_functional">Lambdas</a> and <a href="#_Method_References">Method References</a> baked by <a href="#_Interface%E2%80%99s_Default_and">Interface’s Default and Static Methods</a> is the Java 8 response to the modern paradigms in software development. For more details, please refer to <a href="http://docs.oracle.com/javase/tutorial/collections/streams/index.html">official documentation</a>.</p><h2><a name="date/Time_API_(JSR 310)"></a>4.3. Date/Time API (JSR 310)</h2><p>Java 8 makes one more take on date and time management by delivering <a href="https://jcp.org/en/jsr/detail?id=310">New Date-Time API (JSR 310)</a>. Date and time manipulation is being one of the worst pain points for Java developers. The standard <strong>java.util.Date</strong> followed by <strong>java.util.Calendar </strong>hasn’t improved the situation at all (arguably, made it even more confusing).</p><p>That is how <a href="http://www.joda.org/joda-time/">Joda-Time</a> was born: the great alternative date/time API for Java. The Java 8’s <a href="https://jcp.org/en/jsr/detail?id=310">New Date-Time API (JSR 310)</a> was heavily influenced by <a href="http://www.joda.org/joda-time/">Joda-Time</a> and took the best of it. The new <strong>java.time</strong> package contains <a href="http://www.javacodegeeks.com/2014/03/whats-new-in-java-8-date-api.html">all the classes for date, time, date/time, time zones, instants, duration, and clocks manipulation</a>.
 In the design of the API the immutability has been taken into account 
very seriously: no change allowed (the tough lesson learnt from<strong> java.util.Calendar</strong>). If the modification is required, the new instance of respective class will be returned.</p><p>Let us take a look on key classes and examples of their usages. The first class is <strong>Clock</strong> which provides access to the current instant, date and time using a time-zone. <strong>Clock</strong> can be used instead of <strong>System.currentTimeMillis()</strong> and <strong>TimeZone.getDefault()</strong>.</p><div class="syntaxhighlighter  " id="highlighter_41208"><div class="bar  "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="comments">// Get the system clock as UTC offset </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="keyword">final</code> <code class="plain">Clock clock = Clock.systemUTC();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="plain">System.out.println( clock.instant() );</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="plain">System.out.println( clock.millis() );</code></td></tr></tbody></table></div></div></div><p>The sample output on a console:</p><div class="syntaxhighlighter  " id="highlighter_25105"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="value">2014</code><code class="plain">-</code><code class="value">04</code><code class="plain">-12T15:</code><code class="value">19</code><code class="plain">:</code><code class="value">29</code><code class="plain">.282Z</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="value">1397315969360</code></td></tr></tbody></table></div></div></div><p>Other new classes we are going to look at are <strong>LocaleDate</strong> and <strong>LocalTime</strong>. <strong>LocaleDate </strong>holds only the date part without a time-zone in the ISO-8601 calendar system. Respectively, <strong>LocaleTime </strong>holds only the time part without time-zone in the ISO-8601 calendar system. Both <strong>LocaleDate </strong>and<strong> LocaleTime </strong>could be created from <strong>Clock</strong>.</p><div class="syntaxhighlighter  " id="highlighter_5601"><div class="bar  "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="comments">// Get the local date and local time</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content"><code class="keyword">final</code> <code class="plain">LocalDate date = LocalDate.now();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">final</code> <code class="plain">LocalDate dateFromClock = LocalDate.now( clock );</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="plain">System.out.println( date );</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="plain">System.out.println( dateFromClock );</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="comments">// Get the local date and local time</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="keyword">final</code> <code class="plain">LocalTime time = LocalTime.now();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="keyword">final</code> <code class="plain">LocalTime timeFromClock = LocalTime.now( clock );</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="plain">System.out.println( time );</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="plain">System.out.println( timeFromClock );</code></td></tr></tbody></table></div></div></div><p>The sample output on a console:</p><div class="syntaxhighlighter  " id="highlighter_192714"><div class="bar  "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="value">2014</code><code class="plain">-</code><code class="value">04</code><code class="plain">-</code><code class="value">12</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="value">2014</code><code class="plain">-</code><code class="value">04</code><code class="plain">-</code><code class="value">12</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="value">11</code><code class="plain">:</code><code class="value">25</code><code class="plain">:</code><code class="value">54.568</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="value">15</code><code class="plain">:</code><code class="value">25</code><code class="plain">:</code><code class="value">54.568</code></td></tr></tbody></table></div></div></div><p>The <strong>LocalDateTime</strong> combines together <strong>LocaleDate</strong> and <strong>LocalTime</strong> and holds a date with time but without a time-zone in the ISO-8601 calendar system. A <a href="http://www.javacodegeeks.com/2014/04/java-8-date-time-api-tutorial-localdatetime.html">quick example</a> is shown below.</p><div class="syntaxhighlighter  " id="highlighter_796634"><div class="bar            "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="comments">// Get the local date/time</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="keyword">final</code> <code class="plain">LocalDateTime datetime = LocalDateTime.now();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="keyword">final</code> <code class="plain">LocalDateTime datetimeFromClock = LocalDateTime.now( clock );</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>5</code></td><td class="content"><code class="plain">System.out.println( datetime );</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>6</code></td><td class="content"><code class="plain">System.out.println( datetimeFromClock );</code></td></tr></tbody></table></div></div></div><p>The sample output on a console:</p><div class="syntaxhighlighter  " id="highlighter_802230"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="value">2014</code><code class="plain">-</code><code class="value">04</code><code class="plain">-12T11:</code><code class="value">37</code><code class="plain">:</code><code class="value">52.309</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="value">2014</code><code class="plain">-</code><code class="value">04</code><code class="plain">-12T15:</code><code class="value">37</code><code class="plain">:</code><code class="value">52.309</code></td></tr></tbody></table></div></div></div><p>If case you need a date/time for particular timezone, the <strong>ZonedDateTime </strong>is
 here to help. It holds a date with time and with a time-zone in the 
ISO-8601 calendar system. Here are a couple of examples for different 
timezones.</p><div class="syntaxhighlighter  " id="highlighter_370321"><div class="bar  "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="comments">// Get the zoned date/time</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="keyword">final</code> <code class="plain">ZonedDateTime zonedDatetime = ZonedDateTime.now();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="keyword">final</code> <code class="plain">ZonedDateTime zonedDatetimeFromClock = ZonedDateTime.now( clock );</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="keyword">final</code> <code class="plain">ZonedDateTime zonedDatetimeFromZone = ZonedDateTime.now( ZoneId.of( </code><code class="string">"America/Los_Angeles"</code> <code class="plain">) );</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>5</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>6</code></td><td class="content"><code class="plain">System.out.println( zonedDatetime );</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>7</code></td><td class="content"><code class="plain">System.out.println( zonedDatetimeFromClock );</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>8</code></td><td class="content"><code class="plain">System.out.println( zonedDatetimeFromZone );</code></td></tr></tbody></table></div></div></div><p>The sample output on a console:</p><div class="syntaxhighlighter  " id="highlighter_288438"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="value">2014</code><code class="plain">-</code><code class="value">04</code><code class="plain">-12T11:</code><code class="value">47</code><code class="plain">:</code><code class="value">01.017</code><code class="plain">-</code><code class="value">04</code><code class="plain">:</code><code class="value">00</code><code class="plain">[America/New_York]</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="value">2014</code><code class="plain">-</code><code class="value">04</code><code class="plain">-12T15:</code><code class="value">47</code><code class="plain">:</code><code class="value">01</code><code class="plain">.017Z</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="value">2014</code><code class="plain">-</code><code class="value">04</code><code class="plain">-12T08:</code><code class="value">47</code><code class="plain">:</code><code class="value">01.017</code><code class="plain">-</code><code class="value">07</code><code class="plain">:</code><code class="value">00</code><code class="plain">[America/Los_Angeles]</code></td></tr></tbody></table></div></div></div><p>And finally, let us take a look on <strong>Duration</strong>
 class: an amount of time in terms of seconds and nanoseconds. It makes 
very easy to compute the different between two dates. Let us take a look
 on that.</p><div class="syntaxhighlighter  " id="highlighter_911118"><div class="bar  "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="comments">// Get duration between two dates</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="keyword">final</code> <code class="plain">LocalDateTime from = LocalDateTime.of( </code><code class="value">2014</code><code class="plain">, Month.APRIL, </code><code class="value">16</code><code class="plain">, </code><code class="value">0</code><code class="plain">, </code><code class="value">0</code><code class="plain">, </code><code class="value">0</code> <code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="keyword">final</code> <code class="plain">LocalDateTime to = LocalDateTime.of( </code><code class="value">2015</code><code class="plain">, Month.APRIL, </code><code class="value">16</code><code class="plain">, </code><code class="value">23</code><code class="plain">, </code><code class="value">59</code><code class="plain">, </code><code class="value">59</code> <code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>5</code></td><td class="content"><code class="keyword">final</code> <code class="plain">Duration duration = Duration.between( from, to );</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>6</code></td><td class="content"><code class="plain">System.out.println( </code><code class="string">"Duration in days: "</code> <code class="plain">+ duration.toDays() );</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>7</code></td><td class="content"><code class="plain">System.out.println( </code><code class="string">"Duration in hours: "</code> <code class="plain">+ duration.toHours() );</code></td></tr></tbody></table></div></div></div><p>The example above computes the duration (in days and hours) between two dates, <strong>16 April 2014</strong> and <strong>16 April 2015</strong>. Here is the sample output on a console:</p><div class="syntaxhighlighter  " id="highlighter_553186"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">Duration in days: </code><code class="value">365</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">Duration in hours: </code><code class="value">8783</code></td></tr></tbody></table></div></div></div><p>The
 overall impression about Java 8’s new date/time API is very, very 
positive. Partially, because of the battle-proved foundation it is built
 upon (<a href="http://www.joda.org/joda-time/">Joda-Time</a>), 
partially because this time it was finally tackled seriously and 
developer voices have been heard. For more details please refer to <a href="http://docs.oracle.com/javase/tutorial/datetime/index.html">official documentation</a>.</p><h2><a name="nashorn_JavaScript_engine"></a>4.4. Nashorn JavaScript engine</h2><p><a href="http://www.javacodegeeks.com/2014/02/java-8-compiling-lambda-expressions-in-the-new-nashorn-js-engine.html">Java 8 comes with new Nashorn JavaScript engine</a>
 which allows developing and running certain kinds of JavaScript 
applications on JVM. Nashorn JavaScript engine is just another 
implementation of javax.script.ScriptEngine and follows the same set of 
rules, permitting Java and JavaScript interoperability. Here is a small 
example.</p><div class="syntaxhighlighter  " id="highlighter_552408"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">ScriptEngineManager manager = </code><code class="keyword">new</code> <code class="plain">ScriptEngineManager();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">ScriptEngine engine = manager.getEngineByName( </code><code class="string">"JavaScript"</code> <code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="plain">System.out.println( engine.getClass().getName() );</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>5</code></td><td class="content"><code class="plain">System.out.println( </code><code class="string">"Result:"</code> <code class="plain">+ engine.eval( </code><code class="string">"function f() { return 1; }; f() + 1;"</code> <code class="plain">) );</code></td></tr></tbody></table></div></div></div><p>The sample output on a console:</p><div class="syntaxhighlighter  " id="highlighter_303489"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">jdk.nashorn.api.scripting.NashornScriptEngine</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">Result: </code><code class="value">2</code></td></tr></tbody></table></div></div></div><p>We will get back to the Nashorn later in the section <a href="#_New_Java_tools">dedicated to new Java tools</a>.</p><h2><a name="base64"></a>4.5. Base64</h2><p>Finally, the <a href="http://www.javacodegeeks.com/2014/04/base64-in-java-8-its-not-too-late-to-join-in-the-fun.html">support of Base64 encoding</a> has made its way into Java standard library with Java 8 release. It is very easy to use as following example shows off.</p><div class="syntaxhighlighter  " id="highlighter_184333"><div class="bar       "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">com.javacodegeeks.java8.base64;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.nio.charset.StandardCharsets;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.util.Base64;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">Base64s {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">void</code> <code class="plain">main(String[] args) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">final</code> <code class="plain">String text = </code><code class="string">"Base64 finally in Java 8!"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">final</code> <code class="plain">String encoded = Base64</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">.getEncoder()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">.encodeToString( text.getBytes( StandardCharsets.UTF_8 ) );</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println( encoded );</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">final</code> <code class="plain">String decoded = </code><code class="keyword">new</code> <code class="plain">String( </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Base64.getDecoder().decode( encoded ),</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">StandardCharsets.UTF_8 );</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println( decoded );</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>The console output from program run shows both encoded and decoded text:</p><div class="syntaxhighlighter  " id="highlighter_463689"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">QmFzZTY0IGZpbmFsbHkgaW4gSmF2YSA4IQ==</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">Base64 </code><code class="keyword">finally</code> <code class="plain">in Java </code><code class="value">8</code><code class="plain">!</code></td></tr></tbody></table></div></div></div><p>There are also URL-friendly encoder/decoder and MIME-friendly encoder/decoder provided by the Base64 class (<strong>Base64.<em>getUrlEncoder</em>()</strong> / <strong>Base64.<em>getUrlDecoder</em>()</strong>, <strong>Base64.<em>getMimeEncoder</em>()</strong> / <strong>Base64.<em>getMimeDecoder</em>()</strong>).</p><h2><a name="parallel_arrays"></a>4.6. Parallel Arrays</h2><p>Java 8 release adds a lot of new methods to allow parallel arrays processing. Arguably, the most important one is <strong>parallelSort()</strong>
 which may significantly speedup the sorting on multicore machines. The 
following small example demonstrates this new method family (<strong>parallelXxx</strong>) in action.</p><div class="syntaxhighlighter  " id="highlighter_110566"><div class="bar    "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">com.javacodegeeks.java8.parallel.arrays;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.util.Arrays;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.util.concurrent.ThreadLocalRandom;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">ParallelArrays {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">void</code> <code class="plain">main( String[] args ) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">long</code><code class="plain">[] arrayOfLong = </code><code class="keyword">new</code> <code class="keyword">long</code> <code class="plain">[ </code><code class="value">20000</code> <code class="plain">];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Arrays.parallelSetAll( arrayOfLong, </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">index -&gt; ThreadLocalRandom.current().nextInt( </code><code class="value">1000000</code> <code class="plain">) );</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Arrays.stream( arrayOfLong ).limit( </code><code class="value">10</code> <code class="plain">).forEach( </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">i -&gt; System.out.print( i + </code><code class="string">" "</code> <code class="plain">) );</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Arrays.parallelSort( arrayOfLong );&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Arrays.stream( arrayOfLong ).limit( </code><code class="value">10</code> <code class="plain">).forEach( </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">i -&gt; System.out.print( i + </code><code class="string">" "</code> <code class="plain">) );</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>This small code snippet uses method <strong><em>parallelSetAll()</em></strong> to fill up arrays with 20000 random values. After that, the <strong><em>parallelSort()</em></strong>
 is being applied. The program outputs first 10 elements before and 
after sorting so to ensure the array is really ordered. The sample 
program output may look like that (please notice that array elements are
 randomly generated):</p><div class="syntaxhighlighter  " id="highlighter_456739"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">Unsorted: </code><code class="value">591217</code> <code class="value">891976</code> <code class="value">443951</code> <code class="value">424479</code> <code class="value">766825</code> <code class="value">351964</code> <code class="value">242997</code> <code class="value">642839</code> <code class="value">119108</code> <code class="value">552378</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">Sorted: </code><code class="value">39</code> <code class="value">220</code> <code class="value">263</code> <code class="value">268</code> <code class="value">325</code> <code class="value">607</code> <code class="value">655</code> <code class="value">678</code> <code class="value">723</code> <code class="value">793</code></td></tr></tbody></table></div></div></div><h2><a name="concurrency"></a>4.7. Concurrency</h2><p>New methods have been added to the <strong>java.util.concurrent.ConcurrentHashMap</strong>
 class to support aggregate operations based on the newly added streams 
facility and lambda expressions. Also, new methods have been added to 
the <strong>java.util.concurrent.ForkJoinPool</strong> class to support a common pool (check also our <a href="http://academy.javacodegeeks.com/course/java-concurrency-essentials/">free course on Java concurrency</a>).</p><p>The new <strong>java.util.concurrent.locks.StampedLock</strong>
 class has been added to provide a capability-based lock with three 
modes for controlling read/write access (it might be considered as 
better alternative for infamous <strong>java.util.concurrent.locks.ReadWriteLock</strong>).</p><p>New classes have been added to the <strong>java.util.concurrent.atomic </strong>package:</p><ul><li><strong>DoubleAccumulator</strong></li><li><strong>DoubleAdder</strong></li><li><strong>LongAccumulator</strong></li><li><strong>LongAdder</strong></li></ul><h1><a name="new_java_tools"></a>5. New Java tools</h1><p>Java 8 comes with new set of command line tools. In this section we are going to look over most interesting of them.</p><h2><a name="nashorn_engine: jjs"></a>5.1. Nashorn engine: jjs</h2><p><strong>jjs</strong>
 is a command line based standalone Nashorn engine. It accepts a list of
 JavaScript source code files as arguments and runs them. For example, 
let us create a file <strong>func.js</strong> with following content:</p><div class="syntaxhighlighter  " id="highlighter_572577"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">function f() { </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="value">1</code><code class="plain">; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="plain">}; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>5</code></td><td class="content"><code class="plain">print( f() + </code><code class="value">1</code> <code class="plain">);</code></td></tr></tbody></table></div></div></div><p>To execute this fie from command, let us pass it as an argument to <strong>jjs</strong>:</p><div class="syntaxhighlighter  " id="highlighter_87684"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">jjs func.js</code></td></tr></tbody></table></div></div></div><p>The output on the console will be:</p><div class="syntaxhighlighter  " id="highlighter_783573"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="value">2</code></td></tr></tbody></table></div></div></div><p>For more details please refer to <a href="http://docs.oracle.com/javase/8/docs/technotes/tools/unix/jjs.html">official documentation</a>.</p><h2><a name="class_dependency_analyzer: jdeps"></a>5.2. Class dependency analyzer: jdeps</h2><p><strong>jdeps</strong> is a really great command line tool. It shows the package-level or class-level dependencies of Java class files. It accepts <strong>.class</strong> file, <strong>a directory</strong>, or<strong> JAR file</strong> as an input. By default, <strong>jdeps</strong> outputs the dependencies to the system output (console).</p><p>As an example, let us take a look on dependencies report for the popular <a href="http://projects.spring.io/spring-framework/">Spring Framework</a> library. To make example short, let us analyze only one JAR file: <strong>org.springframework.core-3.0.5.RELEASE.jar</strong>.</p><div class="syntaxhighlighter  " id="highlighter_619358"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">jdeps org.springframework.core-</code><code class="value">3.0</code><code class="plain">.</code><code class="value">5</code><code class="plain">.RELEASE.jar</code></td></tr></tbody></table></div></div></div><p>This
 command outputs quite a lot so we are going to look on the part of it. 
The dependencies are grouped by packages. If dependency is not available
 on a classpath, it is shown as <strong>not found</strong>.</p><div class="syntaxhighlighter  " id="highlighter_457389"><div class="bar   "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="plain">org.springframework.core-</code><code class="value">3.0</code><code class="plain">.</code><code class="value">5</code><code class="plain">.RELEASE.jar -&gt; C:\Program Files\Java\jdk1.</code><code class="value">8.0</code><code class="plain">\jre\lib\rt.jar</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="plain">org.springframework.core (org.springframework.core-</code><code class="value">3.0</code><code class="plain">.</code><code class="value">5</code><code class="plain">.RELEASE.jar)</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">-&gt;
 
java.io&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">-&gt;
 
java.lang&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">-&gt;
 
java.lang.annotation&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">-&gt;
 
java.lang.ref&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">-&gt;
 
java.lang.reflect&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">-&gt;
 
java.util&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">-&gt;
 
java.util.concurrent&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">-&gt;
 
org.apache.commons.logging&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 not found</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">-&gt;
 
org.springframework.asm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 not found</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">-&gt;
 
org.springframework.asm.commons&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 not found</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="plain">org.springframework.core.annotation (org.springframework.core-</code><code class="value">3.0</code><code class="plain">.</code><code class="value">5</code><code class="plain">.RELEASE.jar)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">-&gt;
 
java.lang&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">-&gt;
 
java.lang.annotation&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">-&gt;
 
java.lang.reflect&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">-&gt; java.util</code></td></tr></tbody></table></div></div></div><p>For more details please refer to <a href="http://docs.oracle.com/javase/8/docs/technotes/tools/unix/jdeps.html">official documentation</a>.</p><h1><a name="new_features_in_Java_runtime_(JVM)"></a>6. New Features in Java runtime (JVM)</h1><p>The <strong>PermGen</strong> space <a href="http://www.javacodegeeks.com/2013/02/java-8-from-permgen-to-metaspace.html">is gone and has been replaced with Metaspace</a> (<a href="http://openjdk.java.net/jeps/122">JEP 122</a>). The JVM options <strong>-XX:PermSize</strong> and –<strong>XX:MaxPermSize</strong> have been replaced by <strong>-XX:MetaSpaceSize</strong> and <strong>-XX:MaxMetaspaceSize</strong> respectively.</p><h1><a name="conclusions"></a>7. Conclusions</h1><p>The
 future is here: Java 8 moves this great platform forward by delivering 
the features to make developers much more productive. It is too early to
 move the production systems to Java 8 but in the next couples of months
 its adoption should slowly start growing. Nevertheless the time is 
right to start preparing your code bases to be compatible with Java 8 
and to be ready to turn the switch once Java 8 proves to be safe and 
stable enough.</p><p>As a confirmation of community Java 8 acceptance, recently Pivotal released <a href="https://spring.io/blog/2014/03/27/spring-framework-4-0-3-released-with-java-8-support-now-production-ready">Spring Framework 4.0.3 with production-ready Java 8 support</a>.</p><p>If you enjoyed this, then <strong><a href="http://eepurl.com/xRlkj">subscribe to our newsletter</a></strong> to enjoy weekly updates and complimentary whitepapers! Also, check out <a href="http://academy.javacodegeeks.com/"><strong>JCG Academy</strong></a> for more advanced training!</p><p><em>You are welcome to contribute with your comments about the exciting new Java 8 features!</em></p><h1><a name="Resources"></a>8. Resources</h1><p>Some additional resources which discuss in depth different aspects of Java 8 features:</p><ul><li>What’s New in JDK 8: <a href="http://www.oracle.com/technetwork/java/javase/8-whats-new-2157071.html">http://www.oracle.com/technetwork/java/javase/8-whats-new-2157071.html</a></li><li>The Java Tutorials: <a href="http://docs.oracle.com/javase/tutorial/">http://docs.oracle.com/javase/tutorial/</a></li><li>WildFly 8, JDK 8, NetBeans 8, Java EE 7: <a href="http://blog.arungupta.me/2014/03/wildfly8-jdk8-netbeans8-javaee7-excellent-combo-enterprise-java/">http://blog.arungupta.me/2014/03/wildfly8-jdk8-netbeans8-javaee7-excellent-combo-enterprise-java/</a></li><li>Java 8 Tutorial: <a href="http://winterbe.com/posts/2014/03/16/java-8-tutorial/">http://winterbe.com/posts/2014/03/16/java-8-tutorial/</a></li><li>JDK 8 Command-line Static Dependency Checker: <a href="http://marxsoftware.blogspot.ca/2014/03/jdeps.html">http://marxsoftware.blogspot.ca/2014/03/jdeps.html</a></li><li>The Illuminating Javadoc of JDK 8: <a href="http://marxsoftware.blogspot.ca/2014/03/illuminating-javadoc-of-jdk-8.html">http://marxsoftware.blogspot.ca/2014/03/illuminating-javadoc-of-jdk-8.html</a></li><li>The Dark Side of Java 8: <a href="http://blog.jooq.org/2014/04/04/java-8-friday-the-dark-side-of-java-8/">http://blog.jooq.org/2014/04/04/java-8-friday-the-dark-side-of-java-8/</a></li><li>Installing Java™ 8 Support in Eclipse Kepler SR2: <a href="http://www.eclipse.org/downloads/java8/">http://www.eclipse.org/downloads/java8/</a></li><li>Java 8: <a href="http://www.baeldung.com/java8">http://www.baeldung.com/java8</a></li><li>Oracle Nashorn. A Next-Generation JavaScript Engine for the JVM: <a href="http://www.oracle.com/technetwork/articles/java/jf14-nashorn-2126515.html">http://www.oracle.com/technetwork/articles/java/jf14-nashorn-2126515.html</a></li></ul></div> <span style="display:none"><a href="https://www.javacodegeeks.com/tag/java-8/" rel="tag">Java 8</a> <a href="https://www.javacodegeeks.com/tag/lambdas/" rel="tag">Lambdas</a> <a href="https://www.javacodegeeks.com/tag/ultimate/" rel="tag">Ultimate</a></span> <span style="display:none" class="updated">2014-05-09</span><div style="display:none" class="vcard author" itemprop="author" itemscope="" itemtype="http://schema.org/Person"><strong class="fn" itemprop="name"><a href="https://www.javacodegeeks.com/author/Andrey-Redko/" title="Posts by Andrey Redko" rel="author">Andrey Redko</a></strong></div></div> </article><p class="post-tag">Tagged with: <a href="https://www.javacodegeeks.com/tag/java-8/" rel="tag">Java 8</a> <a href="https://www.javacodegeeks.com/tag/lambdas/" rel="tag">Lambdas</a> <a href="https://www.javacodegeeks.com/tag/ultimate/" rel="tag">Ultimate</a></p><form id="mc4wp-form-2" class="mc4wp-form mc4wp-form-29380 mc4wp-form-theme mc4wp-form-theme-red mc4wp-ajax" method="post" data-id="29380" data-name="Under The Post"><div class="mc4wp-form-fields"><div class="nlbox1"><h1>Do you want to know how to develop your skillset to become a <span style="color: #CAB43D; text-shadow: 1px 1px #835D5D;">Java Rockstar?</span></h1><div style="background: url('/wp-content/uploads/2015/01/books_promo.png') no-repeat; float:left; padding: 75px 145px 310px 170px; margin-top: -10px; margin-left: -35px;"></div><table style="margin-top: 20px; padding-left: 20px;"><tbody><tr><td style="vertical-align:top;"><h2>Subscribe to our newsletter to start Rocking <span style="text-decoration: underline;">right now!</span></h2><h3>To get you started we give you our best selling eBooks for <span style="color:#e01404; text-shadow: 1px 1px #C99924; font-size: 20px; line-height: 25px;">FREE!</span></h3><p>&nbsp;</p><h3><strong>1.</strong> JPA Mini Book</h3><h3><strong>2.</strong> JVM Troubleshooting Guide</h3><h3><strong>3.</strong> JUnit Tutorial for Unit Testing</h3><h3><strong>4.</strong> Java Annotations Tutorial<!--3--></h3><h3><strong>5.</strong> Java Interview Questions</h3><h3><strong>6.</strong> Spring Interview Questions</h3><h3><strong>7.</strong> Android UI Design</h3><p>&nbsp;</p><h3>and many more ....</h3><p>&nbsp;</p><p></p><p> <label for="mc4wp_email"><span style="font-weight: bold; font-size: 13pt;">Email address: </span></label> <input id="mc4wp_email" name="EMAIL" required="" placeholder="Your email address" type="email"></p><p>&nbsp;</p> <input value="Sign up" type="submit"></td></tr></tbody></table></div><div style="display: none;"><input name="_mc4wp_honeypot" tabindex="-1" autocomplete="off" type="text"></div><input name="_mc4wp_timestamp" value="1459929576" type="hidden"><input name="_mc4wp_form_id" value="29380" type="hidden"><input name="_mc4wp_form_element_id" value="mc4wp-form-2" type="hidden"></div><div class="mc4wp-response"></div></form><div class="ads-post"><div id="div-gpt-ad-1415445260332-5" style="width: 300px; height: 250px;"><script type="text/javascript">googletag.cmd.push(function(){googletag.display('div-gpt-ad-1415445260332-5');});</script><div style="border: 0pt none;" id="google_ads_iframe_/70432299/JCG_Under-post_0__container__"><iframe src="javascript:&quot;<html><body style='background:transparent'></body></html>&quot;" style="border: 0px none; vertical-align: bottom;" marginheight="0" marginwidth="0" scrolling="no" name="google_ads_iframe_/70432299/JCG_Under-post_0" title="3rd party ad content" id="google_ads_iframe_/70432299/JCG_Under-post_0" frameborder="0" height="250" width="300"></iframe></div></div></div><div id="comments"><h3 id="comments-title"> 38 comments</h3><ol class="commentlist"><li id="comment-11148"><div class="comment even thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/79c17b6326b3caab24ff7d1bb16ef469.jpg" srcset="https://secure.gravatar.com/avatar/79c17b6326b3caab24ff7d1bb16ef469?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">covuslic</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-11148"> May 11th, 2014 at 10:38 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Chap. 2.1) final String separator<br> Aren’t strings by definition final anymore in Java 8?</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=11148#respond" onclick='return addComment.moveForm( "comment-11148", "11148", "respond", "25097" )' aria-label="Reply to covuslic">Reply</a></div></div><ul class="children"><li id="comment-11221"><div class="comment odd alt depth-2 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/8cd3cd4ce11c192378535f349706129a.jpg" srcset="https://secure.gravatar.com/avatar/8cd3cd4ce11c192378535f349706129a?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Jesper</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-11221"> May 12th, 2014 at 6:22 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>They are immutable. The final keyword applies to the variable containing the reference to the string object.</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=11221#respond" onclick='return addComment.moveForm( "comment-11221", "11221", "respond", "25097" )' aria-label="Reply to Jesper">Reply</a></div></div><ul class="children"><li id="comment-11355"><div class="comment even depth-3 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/5a3cb24ec7d69b4deee04ddee8b5b84d.jpg" srcset="https://secure.gravatar.com/avatar/5a3cb24ec7d69b4deee04ddee8b5b84d?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn"><a href="http://aredko.blogspot.com/" rel="external nofollow" class="url">Andrey Redko</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-11355"> May 14th, 2014 at 1:19 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Exactly,
 thanks a lot. In the context of declaration, the ‘final’ keyword has no
 relation to a type (String, int,…) but to a variable declaration only: 
the variable cannot be reassigned or point to another value.</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=11355#respond" onclick='return addComment.moveForm( "comment-11355", "11355", "respond", "25097" )' aria-label="Reply to Andrey Redko">Reply</a></div></div></li></ul></li></ul></li><li id="comment-11222"><div class="comment odd alt thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/252ff543dff5ea08dbe7e3110899004a.jpg" srcset="https://secure.gravatar.com/avatar/252ff543dff5ea08dbe7e3110899004a?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn"><a href="http://jacekfurmankiewicz.blogspot.com/" rel="external nofollow" class="url">Jacek Furmankiewicz</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-11222"> May 12th, 2014 at 6:30 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Great job Andrey!</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=11222#respond" onclick='return addComment.moveForm( "comment-11222", "11222", "respond", "25097" )' aria-label="Reply to Jacek Furmankiewicz">Reply</a></div></div><ul class="children"><li id="comment-11354"><div class="comment even depth-2 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/5a3cb24ec7d69b4deee04ddee8b5b84d.jpg" srcset="https://secure.gravatar.com/avatar/5a3cb24ec7d69b4deee04ddee8b5b84d?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn"><a href="http://aredko.blogspot.com/" rel="external nofollow" class="url">Andrey Redko</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-11354"> May 14th, 2014 at 1:17 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Thanks a lot!</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=11354#respond" onclick='return addComment.moveForm( "comment-11354", "11354", "respond", "25097" )' aria-label="Reply to Andrey Redko">Reply</a></div></div></li><li id="comment-11359"><div class="comment odd alt depth-2 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/5a3cb24ec7d69b4deee04ddee8b5b84d.jpg" srcset="https://secure.gravatar.com/avatar/5a3cb24ec7d69b4deee04ddee8b5b84d?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn"><a href="http://aredko.blogspot.com/" rel="external nofollow" class="url">Andrey Redko</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-11359"> May 14th, 2014 at 1:30 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Thank a lot! I hope you found something useful for you!</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=11359#respond" onclick='return addComment.moveForm( "comment-11359", "11359", "respond", "25097" )' aria-label="Reply to Andrey Redko">Reply</a></div></div></li></ul></li><li id="comment-11254"><div class="comment even thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/5a3cb24ec7d69b4deee04ddee8b5b84d.jpg" srcset="https://secure.gravatar.com/avatar/5a3cb24ec7d69b4deee04ddee8b5b84d?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn"><a href="http://aredko.blogspot.com/" rel="external nofollow" class="url">Andrey Redko</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-11254"> May 13th, 2014 at 2:05 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Hi covuslic,</p><p>In
 the context of declaration, the ‘final’ keyword has no relation to a 
type (String, int,…) but to a variable declaration only: the variable 
cannot be reassigned or point to another value.</p><p>Thank you.<br> Andrey Redko</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=11254#respond" onclick='return addComment.moveForm( "comment-11254", "11254", "respond", "25097" )' aria-label="Reply to Andrey Redko">Reply</a></div></div></li><li id="comment-11723"><div class="comment odd alt thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/3040b1e01cb22f6a3280da3af187f590.jpg" srcset="https://secure.gravatar.com/avatar/3040b1e01cb22f6a3280da3af187f590?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Enrique</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-11723"> May 17th, 2014 at 12:23 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Thank you very useful article!</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=11723#respond" onclick='return addComment.moveForm( "comment-11723", "11723", "respond", "25097" )' aria-label="Reply to Enrique">Reply</a></div></div></li><li id="comment-12147"><div class="comment even thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/92d29adbe225d697d3aa661e6f84c5ca.jpg" srcset="https://secure.gravatar.com/avatar/92d29adbe225d697d3aa661e6f84c5ca?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Doogie78</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-12147"> May 20th, 2014 at 11:51 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Thank you for all the information on Java 8.</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=12147#respond" onclick='return addComment.moveForm( "comment-12147", "12147", "respond", "25097" )' aria-label="Reply to Doogie78">Reply</a></div></div></li><li id="comment-21102"><div class="comment odd alt thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/0efabcb384caa3a5e5e87718eaf0a1e8.jpg" srcset="https://secure.gravatar.com/avatar/0efabcb384caa3a5e5e87718eaf0a1e8?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Tirthal</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-21102"> July 29th, 2014 at 1:42 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>This is indeed the ultimate guide on Java 8. Thank you Andrey.</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=21102#respond" onclick='return addComment.moveForm( "comment-21102", "21102", "respond", "25097" )' aria-label="Reply to Tirthal">Reply</a></div></div></li><li id="comment-22244"><div class="comment even thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/639fb4f5c336f4df7ffd14b112ed5ad6.jpg" srcset="https://secure.gravatar.com/avatar/639fb4f5c336f4df7ffd14b112ed5ad6?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">yumi</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-22244"> August 7th, 2014 at 5:47 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Hi,
 I really like your article. If you don’t mind, I’d like to translate 
your article into Korean. Please let me know that. Thank you.</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=22244#respond" onclick='return addComment.moveForm( "comment-22244", "22244", "respond", "25097" )' aria-label="Reply to yumi">Reply</a></div></div><ul class="children"><li id="comment-22494"><div class="comment odd alt depth-2 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/5a3cb24ec7d69b4deee04ddee8b5b84d.jpg" srcset="https://secure.gravatar.com/avatar/5a3cb24ec7d69b4deee04ddee8b5b84d?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn"><a href="http://aredko.blogspot.com/" rel="external nofollow" class="url">Andrey Redko</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-22494"> August 10th, 2014 at 12:13 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Hi Yumi,</p><p>Thank
 you for this great chance for the article to be translated into Korean.
 Although I am the author, the article has been published on behalf of 
JCG. I have contacted the JCG and they are willing to grant permission 
for such a translation. If you don’t ming, please contact Ilias Tsagklis
 at <a href="mailto:ilias.tsagklis@javacodegeeks.com">ilias.tsagklis@javacodegeeks.com</a> to received the official rights.</p><p>Thank you very much.</p><p>Best Regards,<br> Andrey Redko</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=22494#respond" onclick='return addComment.moveForm( "comment-22494", "22494", "respond", "25097" )' aria-label="Reply to Andrey Redko">Reply</a></div></div><ul class="children"><li id="comment-27568"><div class="comment even depth-3 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/639fb4f5c336f4df7ffd14b112ed5ad6.jpg" srcset="https://secure.gravatar.com/avatar/639fb4f5c336f4df7ffd14b112ed5ad6?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn"><a href="http://devtrans.tistory.com/" rel="external nofollow" class="url">Yumi</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-27568"> September 14th, 2014 at 8:59 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Hi Andrey Redko,</p><p>I just published this article that I translated into Korean on my blog.<br> I sent an email as you mentioned before and got an permisson translation into Korean.</p><p>If you want to read the article, you can check here<br> <a href="http://devtrans.tistory.com/entry/Java-8-Features-The-ULTIMATE-Guide" rel="nofollow">http://devtrans.tistory.com/entry/Java-8-Features-The-ULTIMATE-Guide</a></p><p>I have enjoyed that I translated this article into Korean. Thank you very much.</p><p>Best Regards,<br> Yumi</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=27568#respond" onclick='return addComment.moveForm( "comment-27568", "27568", "respond", "25097" )' aria-label="Reply to Yumi">Reply</a></div></div><ul class="children"><li id="comment-27604"><div class="comment odd alt depth-4 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/5a3cb24ec7d69b4deee04ddee8b5b84d.jpg" srcset="https://secure.gravatar.com/avatar/5a3cb24ec7d69b4deee04ddee8b5b84d?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn"><a href="http://aredko.blogspot.com/" rel="external nofollow" class="url">Andrey Redko</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-27604"> September 14th, 2014 at 3:57 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Hi Yumi,</p><p>Thank you very much!<br> I have browsed through the article, excellent job, thank you!<br> I really hope it will be an interesting reading for the Korean developers!<br> Thank you!</p><p>Best Regards,<br> Andrey Redko</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=27604#respond" onclick='return addComment.moveForm( "comment-27604", "27604", "respond", "25097" )' aria-label="Reply to Andrey Redko">Reply</a></div></div></li></ul></li></ul></li></ul></li><li id="comment-22493"><div class="comment even thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/5a3cb24ec7d69b4deee04ddee8b5b84d.jpg" srcset="https://secure.gravatar.com/avatar/5a3cb24ec7d69b4deee04ddee8b5b84d?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn"><a href="http://aredko.blogspot.com/" rel="external nofollow" class="url">Andrey Redko</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-22493"> August 10th, 2014 at 12:12 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Hi Yumi,</p><p>Thank
 you for this great chance for the article to be translated into Korean.
 Although I am the author, the article has been published on behalf of 
JCG. I have contacted the JCG and they are willing to grant the 
permission for such a translation. If you don’t mind, please contact 
Ilias Tsagklis at <a href="mailto:ilias.tsagklis@javacodegeeks.com">ilias.tsagklis@javacodegeeks.com</a> to receive the official rights.</p><p>Thank you very much.</p><p>Best Regards,<br> Andrey Redko</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=22493#respond" onclick='return addComment.moveForm( "comment-22493", "22493", "respond", "25097" )' aria-label="Reply to Andrey Redko">Reply</a></div></div></li><li id="comment-23868"><div class="comment odd alt thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/3eda6fcd3204ef285fa52176c28c4d3e.jpg" srcset="https://secure.gravatar.com/avatar/3eda6fcd3204ef285fa52176c28c4d3e?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Tim</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-23868"> August 21st, 2014 at 3:07 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Hi,</p><p>Calculating
 the percentages in the “Streams” section: you forgot to cast “points” 
to double, otherwise you divide a long by a long and end up with a long,
 which is 0 for each task.</p><p>Grtz</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=23868#respond" onclick='return addComment.moveForm( "comment-23868", "23868", "respond", "25097" )' aria-label="Reply to Tim">Reply</a></div></div><ul class="children"><li id="comment-24084"><div class="comment even depth-2 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/5a3cb24ec7d69b4deee04ddee8b5b84d.jpg" srcset="https://secure.gravatar.com/avatar/5a3cb24ec7d69b4deee04ddee8b5b84d?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn"><a href="http://aredko.blogspot.com/" rel="external nofollow" class="url">Andriy Redko</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-24084"> August 23rd, 2014 at 2:10 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Hi Tim,</p><p>Thank
 you very much for your comment. I would like to argue that casting is 
not necessary as ‘point’ (long) is divided by ‘totalPoints’ (double), 
which by Java type conversion rules should pick ‘double’ as the 
resulting type. Would you mind please to give me a bit more details with
 code snippet and the issue you are having, I will be happy to address 
it.</p><p>Thank you a lot!</p><p>Best Regards,<br> Andriy Redko</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=24084#respond" onclick='return addComment.moveForm( "comment-24084", "24084", "respond", "25097" )' aria-label="Reply to Andriy Redko">Reply</a></div></div></li></ul></li><li id="comment-32145"><div class="comment odd alt thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/4347431127bdac2d54f83375f0ae3dcd.jpg" srcset="https://secure.gravatar.com/avatar/4347431127bdac2d54f83375f0ae3dcd?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn"><a href="http://jeet-software.blogspot.in/" rel="external nofollow" class="url">JK</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-32145"> October 9th, 2014 at 7:18 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Lambda expression examples –<br> <a href="http://jeet-software.blogspot.in/2014/10/java-8-features.html" rel="nofollow">http://jeet-software.blogspot.in/2014/10/java-8-features.html</a></p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=32145#respond" onclick='return addComment.moveForm( "comment-32145", "32145", "respond", "25097" )' aria-label="Reply to JK">Reply</a></div></div></li><li id="comment-45900"><div class="comment even thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/c44a7a4594601bd7b190426fb2b3a067.jpg" srcset="https://secure.gravatar.com/avatar/c44a7a4594601bd7b190426fb2b3a067?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">KC</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-45900"> January 20th, 2015 at 7:09 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Nice guide.</p><p>Section 2.2 has “Defaulable” as typo repeated several times.  I believe it should be “Defaultable”</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=45900#respond" onclick='return addComment.moveForm( "comment-45900", "45900", "respond", "25097" )' aria-label="Reply to KC">Reply</a></div></div></li><li id="comment-47890"><div class="comment odd alt thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/459c81d174871fa3d0915c3dcf413cfc.jpg" srcset="https://secure.gravatar.com/avatar/459c81d174871fa3d0915c3dcf413cfc?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Kiran</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-47890"> February 4th, 2015 at 5:37 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>@Andriy Redko   In 2.2 section: is private modifier allowed for interface and also for static class ?</p><p>I am getting errors. If i remove private modifier, its working fine.</p><p>private interface Defaulable {</p><p> default String notRequired(){<br> return  “Default implementation”;<br> }</p><p> private  static class DefaultableImpl implements Defaulable{</p><p> }<br> private   static class OverridableImpl implements Defaulable{</p><p> @Override<br> public String notRequired(){<br> return “Overridden implementation”;<br> }<br> }</p><p>}</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=47890#respond" onclick='return addComment.moveForm( "comment-47890", "47890", "respond", "25097" )' aria-label="Reply to Kiran">Reply</a></div></div><ul class="children"><li id="comment-50972"><div class="comment even depth-2 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/5a3cb24ec7d69b4deee04ddee8b5b84d.jpg" srcset="https://secure.gravatar.com/avatar/5a3cb24ec7d69b4deee04ddee8b5b84d?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn"><a href="http://aredko.blogspot.ca/" rel="external nofollow" class="url">Andrey Redko</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-50972"> February 28th, 2015 at 10:07 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Hi Kiran,</p><p>Sorry
 for late response. My apologies for leaving off this detail but private
 modifier is allowed for interfaces and static classes when they are 
defined inside another class (inner interfaces / classes). For example:</p><p>public class DefaultMethods {<br> private interface Defaulable {<br> default String notRequired(){<br> return “Default implementation”;<br> }<br> }</p><p>Aside
 from that, private modifier is not allowed for interfaces (and for 
static classes as well as those could be defined only as inner classes).</p><p>Thank you.</p><p>Best Regards,<br> Andriy Redko</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=50972#respond" onclick='return addComment.moveForm( "comment-50972", "50972", "respond", "25097" )' aria-label="Reply to Andrey Redko">Reply</a></div></div></li></ul></li><li id="comment-52008"><div class="comment odd alt thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/f006ef9dbe4887f06a6c5b1ccb519edf.jpg" srcset="https://secure.gravatar.com/avatar/f006ef9dbe4887f06a6c5b1ccb519edf?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">J.W</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-52008"> March 9th, 2015 at 6:00 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Excellent article!</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=52008#respond" onclick='return addComment.moveForm( "comment-52008", "52008", "respond", "25097" )' aria-label="Reply to J.W">Reply</a></div></div></li><li id="comment-53044"><div class="comment even thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/36cefa60aa28f693cce72e11e2195d9e.jpg" srcset="https://secure.gravatar.com/avatar/36cefa60aa28f693cce72e11e2195d9e?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Ajaya</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-53044"> March 18th, 2015 at 1:31 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Need the link for other java e-books e.g. “Java Annotations Tutorial”</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=53044#respond" onclick='return addComment.moveForm( "comment-53044", "53044", "respond", "25097" )' aria-label="Reply to Ajaya">Reply</a></div></div></li><li id="comment-53087"><div class="comment odd alt thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/7309dd3d6ce52ef38142e23ba3d5d9c4.jpg" srcset="https://secure.gravatar.com/avatar/7309dd3d6ce52ef38142e23ba3d5d9c4?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Aslam</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-53087"> March 18th, 2015 at 3:26 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>How can I download this tutorial in pdf?<br> I have already signed up.</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=53087#respond" onclick='return addComment.moveForm( "comment-53087", "53087", "respond", "25097" )' aria-label="Reply to Aslam">Reply</a></div></div></li><li id="comment-54978"><div class="comment even thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/f50a9768da34d10f54494d82bba7206d.jpg" srcset="https://secure.gravatar.com/avatar/f50a9768da34d10f54494d82bba7206d?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Rahul S</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-54978"> April 3rd, 2015 at 12:00 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Please let me know how to download this e-book?</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=54978#respond" onclick='return addComment.moveForm( "comment-54978", "54978", "respond", "25097" )' aria-label="Reply to Rahul S">Reply</a></div></div></li><li id="comment-56602"><div class="comment odd alt thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/4cafe0f986ef35724efc78470c8a050a.jpg" srcset="https://secure.gravatar.com/avatar/4cafe0f986ef35724efc78470c8a050a?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn"><a href="http://rocksolutions.wordpress.com/" rel="external nofollow" class="url">rocks</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-56602"> April 20th, 2015 at 1:33 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Thank
 a ton for putting all these wonderful feature together, I am using java
 from last 9 years and last year I got attracted toward Python for its 
concise code no boilerplate code, but looks like JDK8 Got nice features 
to keep its developers sticks to java…</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=56602#respond" onclick='return addComment.moveForm( "comment-56602", "56602", "respond", "25097" )' aria-label="Reply to rocks">Reply</a></div></div></li><li id="comment-56753"><div class="comment even thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/7a67e5059b56da58684c55747ed19f20.jpg" srcset="https://secure.gravatar.com/avatar/7a67e5059b56da58684c55747ed19f20?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Velu</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-56753"> April 21st, 2015 at 5:48 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Hi Andrey<br>
 Great work friend. all your examples are straight forward and simple 
enough to understand. Also you manage to cover lot of features. highly 
appreciated.<br> regs<br> Velu</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=56753#respond" onclick='return addComment.moveForm( "comment-56753", "56753", "respond", "25097" )' aria-label="Reply to Velu">Reply</a></div></div></li><li id="comment-59580"><div class="comment odd alt thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/6e80e186e462c61bc4750553004a2580.jpg" srcset="https://secure.gravatar.com/avatar/6e80e186e462c61bc4750553004a2580?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Paiker</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-59580"> May 26th, 2015 at 1:16 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Hi,</p><p>i am trying to download this complete article as PDF but unable to see the link to download. Can anyone help me please.</p><p>Thanks,<br> Paiker</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=59580#respond" onclick='return addComment.moveForm( "comment-59580", "59580", "respond", "25097" )' aria-label="Reply to Paiker">Reply</a></div></div></li><li id="comment-59943"><div class="comment even thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/3e5fd204cbc1b877836d6980348a6c51.jpg" srcset="https://secure.gravatar.com/avatar/3e5fd204cbc1b877836d6980348a6c51?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Sandip Mahanta</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-59943"> June 2nd, 2015 at 6:48 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Well written. Very easy to understand. Great job!</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=59943#respond" onclick='return addComment.moveForm( "comment-59943", "59943", "respond", "25097" )' aria-label="Reply to Sandip Mahanta">Reply</a></div></div></li><li id="comment-61647"><div class="comment odd alt thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/88581b630bf31149553ac92631a3b839.jpg" srcset="https://secure.gravatar.com/avatar/88581b630bf31149553ac92631a3b839?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Mats</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-61647"> June 21st, 2015 at 3:35 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Just
 subscribe to the newsletter and you will be notified via your email 
address. After you confirm your address you will receive another email 
with the download links.</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=61647#respond" onclick='return addComment.moveForm( "comment-61647", "61647", "respond", "25097" )' aria-label="Reply to Mats">Reply</a></div></div></li><li id="comment-61844"><div class="comment even thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/34134e16e9eec6264f42bc9790372172.jpg" srcset="https://secure.gravatar.com/avatar/34134e16e9eec6264f42bc9790372172?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Paweł</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-61844"> June 25th, 2015 at 3:56 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Hi,</p><p>The
 article is nice but there is one feature that I don’t like. 
Illustrating the java 8 new possibilities with examples an author uses 
another features that haven’t been yet even mentioned and it causes 
confusion.</p><p>Best regards,<br> Pawel</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=61844#respond" onclick='return addComment.moveForm( "comment-61844", "61844", "respond", "25097" )' aria-label="Reply to Paweł">Reply</a></div></div><ul class="children"><li id="comment-61869"><div class="comment odd alt depth-2 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/5a3cb24ec7d69b4deee04ddee8b5b84d.jpg" srcset="https://secure.gravatar.com/avatar/5a3cb24ec7d69b4deee04ddee8b5b84d?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn"><a href="http://aredko.blogspot.ca/" rel="external nofollow" class="url">Andriy Redko</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-61869"> June 25th, 2015 at 11:44 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>H Pawel,</p><p>Thank
 you very much for the feedback. Would you mind please to give the 
examples where confusion happens so the mistakes like that won’t appear 
anymore?<br> Thank you a lot.</p><p>Best Regards,<br> Andriy Redko</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=61869#respond" onclick='return addComment.moveForm( "comment-61869", "61869", "respond", "25097" )' aria-label="Reply to Andriy Redko">Reply</a></div></div></li></ul></li><li id="comment-67244"><div class="comment even thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/e2f52e897e6638fec2ff821e3a9abd40.jpg" srcset="https://secure.gravatar.com/avatar/e2f52e897e6638fec2ff821e3a9abd40?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Selvan Chinnathambi</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-67244"> September 4th, 2015 at 2:22 am</a></div></div><div class="clear"></div><div class="comment-content"><p>great summary</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=67244#respond" onclick='return addComment.moveForm( "comment-67244", "67244", "respond", "25097" )' aria-label="Reply to Selvan Chinnathambi">Reply</a></div></div></li><li id="comment-72600"><div class="comment odd alt thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/87a9bdb0659a852f4214f26274c3ca0f.jpg" srcset="https://secure.gravatar.com/avatar/87a9bdb0659a852f4214f26274c3ca0f?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">harry</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-72600"> October 27th, 2015 at 12:24 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>thanks for the summary. But where is the PDF?</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=72600#respond" onclick='return addComment.moveForm( "comment-72600", "72600", "respond", "25097" )' aria-label="Reply to harry">Reply</a></div></div></li><li id="comment-73897"><div class="comment even thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/59270f7369f15ee3e5233e7e7256c97d.jpg" srcset="https://secure.gravatar.com/avatar/59270f7369f15ee3e5233e7e7256c97d?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Praful Prajapati</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-73897"> November 18th, 2015 at 2:22 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>New Features in Java 8<br> <a href="http://javasoftwaretechnology.blogspot.in/2015/11/whats-new-in-java-8.html" rel="nofollow">http://javasoftwaretechnology.blogspot.in/2015/11/whats-new-in-java-8.html</a></p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=73897#respond" onclick='return addComment.moveForm( "comment-73897", "73897", "respond", "25097" )' aria-label="Reply to Praful Prajapati">Reply</a></div></div></li><li id="comment-75616"><div class="comment odd alt thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/59270f7369f15ee3e5233e7e7256c97d.jpg" srcset="https://secure.gravatar.com/avatar/59270f7369f15ee3e5233e7e7256c97d?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn"><a href="http://javasoftwaretechnology.blogspot.in/" rel="external nofollow" class="url">Praful Prajapati</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-75616"> December 8th, 2015 at 2:07 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>New Features in Java 9<br> <a href="http://javasoftwaretechnology.blogspot.in/2015/12/new-features-in-java-9.html" rel="nofollow">http://javasoftwaretechnology.blogspot.in/2015/12/new-features-in-java-9.html</a></p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=75616#respond" onclick='return addComment.moveForm( "comment-75616", "75616", "respond", "25097" )' aria-label="Reply to Praful Prajapati">Reply</a></div></div></li><li id="comment-79539"><div class="comment even thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/8009e1aca32362dcd4534e63724f19de.jpg" srcset="https://secure.gravatar.com/avatar/8009e1aca32362dcd4534e63724f19de?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">ivan</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-79539"> February 18th, 2016 at 3:21 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Hello.<br> Not able to figure it out how to use supplier for generics.<br> Class::new when creating generic type.</p><p>Is any example or specification?</p><p>THX</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=79539#respond" onclick='return addComment.moveForm( "comment-79539", "79539", "respond", "25097" )' aria-label="Reply to ivan">Reply</a></div></div><ul class="children"><li id="comment-79565"><div class="comment odd alt depth-2 comment-wrap"><div class="comment-avatar"><img alt="" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/5a3cb24ec7d69b4deee04ddee8b5b84d.jpg" srcset="https://secure.gravatar.com/avatar/5a3cb24ec7d69b4deee04ddee8b5b84d?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn"><a href="http://aredko.blogspot.ca/" rel="external nofollow" class="url">Andriy Redko</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html/#comment-79565"> February 19th, 2016 at 11:33 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Hi Ivan,</p><p>Thank you for the comment. As always, there are a limitations with genetics in Java.<br> You cannot use T::new or something like that to create a new instance of the generic class.<br> Thanks.</p><p>Best Regards,<br> Andriy Redko</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html?replytocom=79565#respond" onclick='return addComment.moveForm( "comment-79565", "79565", "respond", "25097" )' aria-label="Reply to Andriy Redko">Reply</a></div></div></li></ul></li></ol><div id="respond" class="comment-respond"><h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="https://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html#respond" style="display:none;">Cancel reply</a></small></h3><form action="//www.javacodegeeks.com/wp-comments-post.php" method="post" id="commentform" class="comment-form"><p class="comment-notes">Your email address will not be published. Required fields are marked <span class="required">*</span></p><p class="comment-form-comment"><label for="comment">Comment</label><textarea id="comment" name="comment" cols="45" rows="8" aria-required="true" required="required"></textarea></p><p class="comment-form-author"><label for="author">Name</label> <span class="required">*</span><input id="author" name="author" size="30" aria-required="true" required="true" type="text"></p><p class="comment-form-email"><label for="email">Email</label> <span class="required">*</span><input id="email" name="email" size="30" aria-required="true" required="true" type="text"></p><p class="comment-form-url"><label for="url">Website</label><input id="url" name="url" size="30" type="text"></p><p class="mc4wp-checkbox mc4wp-checkbox-wp-comment-form"> <label> <input name="_mc4wp_subscribe_wp-comment-form" value="0" type="hidden"> <input name="_mc4wp_subscribe_wp-comment-form" value="1" checked="checked" type="checkbox"> <span>Sign me up for the newsletter!</span> </label></p><div class="comment-sub-ops" data-auto="position"><label for="comment-mail-sub-type" class="cso-sub-type"> <span class="cso-icon"><svg style="width:1em; height:1em; vertical-align:middle;" viewBox="0 0 16 16" version="1.1" xmlns="http://www.w3.org/2000/svg"> <g fill="currentColor" fill-rule="evenodd"> <path d="M14.1,5.63571636 C14.9517714,6.33967604 15.450459,7.19287046 15.450459,8.11238878 C15.450459,9.00675525 14.9786798,9.83837654 14.1691007,10.5309611 L15.9373937,14.0087185 L12.3204301,12.0078104 C11.9296094,13.5858368 9.54844584,14.7997638 6.66936474,14.7997638 C5.53232152,14.7997638 4.47293941,14.6104254 3.58314938,14.2840966 L3.58314938,14.2840966 L0.600000024,15.934378 L1.91489821,13.3483263 C1.31289726,12.8333222 0.962083376,12.2149306 0.962083376,11.549882 C0.962083376,11.165606 1.07921023,10.7969075 1.29424428,10.4547307 L1.29424428,10.4547307 C0.538036753,9.77771086 0.100000001,8.97417858 0.100000001,8.11238878 C0.100000001,7.04123575 0.776722924,6.06008476 1.89999998,5.30000019 L1.89999998,7.0658888 C1.89999998,7.30870143 2.09163284,7.50553995 2.34867325,7.50553995 L13.6513267,7.50553995 C13.8991221,7.50553995 14.1,7.31362877 14.1,7.0658888 L14.1,5.63571636 L14.1,5.63571636 Z M1.91455086,10.9345943 C1.80464172,11.1556337 1.74596704,11.3882813 1.74596704,11.6284523 C1.74596704,12.1628789 2.03649339,12.660053 2.53556999,13.0749705 L1.89355472,14.5590821 L3.60073421,13.7061116 L3.60073421,13.7061116 C4.4110062,14.0513606 5.42865146,14.2569046 6.53374306,14.2569046 C8.94591699,14.2569046 10.9414496,13.2775827 11.2731076,12.0036603 C10.2241563,12.3100096 9.03514487,12.482874 7.77522952,12.482874 C5.42553187,12.482874 3.3224447,11.8816356 1.91455086,10.9345943 L1.91455086,10.9345943 Z M3.03674893,0 C2.79553911,0 2.5999999,0.198275445 2.5999999,0.450938832 L2.5999999,6.42178844 C2.5999999,6.67083508 2.80610042,6.87272727 3.03674893,6.87272727 L12.9632509,6.87272727 C13.2044607,6.87272727 13.3999999,6.67445183 13.3999999,6.42178844 L13.3999999,0.450938832 C13.3999999,0.201892192 13.1938994,0 12.9632509,0 L3.03674893,0 Z M7.99999989,4.5999999 L12.5,0.600000013 L11.5625,0.600000013 L7.99999989,2.78181813 L4.43749976,0.600000013 L3.5,0.599999905 L7.99999989,4.5999999 Z"></path> </g> </svg></span> Receive Email Notifications? </label><select id="comment-mail-sub-type" name="comment_mail_sub_type" class="cso-sub-type form-control" title="Receive Notifications?"><option value="" selected="selected">no, do not subscribe</option><option value="comment">yes, replies to my comment</option><option value="comments">yes, all comments/replies</option> </select> <select id="comment-mail-sub-deliver" name="comment_mail_sub_deliver" class="cso-sub-deliver form-control" title="Notify Me"><option value="asap" selected="selected">instantly</option><option value="hourly">hourly digest</option><option value="daily">daily digest</option><option value="weekly">weekly digest</option> </select><div class="cso-links"> <span class="cso-link-new">Or, you can <a href="https://www.javacodegeeks.com/?comment_mail%5Bmanage%5D%5Bsub_new%5D=0&amp;comment_mail%5Bmanage%5D%5Bsub_form%5D%5Bpost_id%5D=25097">subscribe without commenting</a>.</span></div></div><style type="text/css">.comment-sub-ops{margin:1em
0 1em 0}.comment-sub-ops
label{display:block}.comment-sub-ops
select{box-sizing:border-box;display:inline-block}.comment-sub-ops select.cso-sub-type{width:70%;float:left}.comment-sub-ops select.cso-sub-deliver{width:28%;float:right}.comment-sub-ops select.cso-sub-deliver[disabled]{opacity:0.3}.comment-sub-ops .cso-links{font-size:80%;line-height:1.5em;margin:0
0 0 .5em;clear:both}.comment-sub-ops .cso-links .cso-link-summary{display:block;line-height:1em}</style><p class="form-submit"><input name="submit" id="submit" class="submit" value="Post Comment" type="submit"> <input name="comment_post_ID" value="25097" id="comment_post_ID" type="hidden"> <input name="comment_parent" id="comment_parent" value="0" type="hidden"></p><p style="display: none;"><input id="akismet_comment_nonce" name="akismet_comment_nonce" value="2fb27afa45" type="hidden"></p><p style="display: none;"></p><input id="ak_js" name="ak_js" value="1459931360534" type="hidden"></form></div></div></div></div> <aside style="top: 882px;" class="sidebar"><div id="text-html-widget-2" class="text-html-box"><div id="div-gpt-ad-1415445260332-3" style="width: 300px; height: 250px;"><script type="text/javascript">googletag.cmd.push(function(){googletag.display('div-gpt-ad-1415445260332-3');});</script><div style="border: 0pt none;" id="google_ads_iframe_/70432299/JCG_Side_0__container__"><iframe src="javascript:&quot;<html><body style='background:transparent'></body></html>&quot;" style="border: 0px none; vertical-align: bottom;" marginheight="0" marginwidth="0" scrolling="no" name="google_ads_iframe_/70432299/JCG_Side_0" title="3rd party ad content" id="google_ads_iframe_/70432299/JCG_Side_0" frameborder="0" height="250" width="300"></iframe></div></div></div><div id="text-html-widget-3" class="text-html-box"><div id="div-gpt-ad-1415445260332-4" style="width: 300px; height: 250px;"><script type="text/javascript">googletag.cmd.push(function(){googletag.display('div-gpt-ad-1415445260332-4');});</script><div style="border: 0pt none;" id="google_ads_iframe_/70432299/JCG_Side_1_0__container__"><iframe src="javascript:&quot;<html><body style='background:transparent'></body></html>&quot;" style="border: 0px none; vertical-align: bottom;" marginheight="0" marginwidth="0" scrolling="no" name="google_ads_iframe_/70432299/JCG_Side_1_0" title="3rd party ad content" id="google_ads_iframe_/70432299/JCG_Side_1_0" frameborder="0" height="250" width="300"></iframe></div></div></div><div id="mc4wp_form_widget-3" class="widget widget_mc4wp_form_widget"><div class="widget-top"><h4>Newsletter</h4><div class="stripe-line"></div></div><div class="widget-container"><form id="mc4wp-form-3" class="mc4wp-form mc4wp-form-28645 mc4wp-form-theme mc4wp-form-theme-red mc4wp-ajax" method="post" data-id="28645" data-name="Sidebar"><div class="mc4wp-form-fields"><div style="padding: 15px 15px 15px; background: url('/wp-content/uploads/2014/11/newsletter-bg.jpg') no-repeat; background-color: rgb(252, 252, 252);"><span style="text-shadow: 1px 1px #D0D0D0; font-weight: bold; font-size: 14pt; display: inline;">159746</span> insiders are already enjoying weekly updates and complimentary whitepapers!<p> <span style="text-shadow: 1px 1px #D0D0D0; font-weight: bold; font-size: 14pt; display: inline;">Join them now</span> to gain <span style="text-decoration: underline;  font-size: 14pt;">exclusive access</span> to the latest news in the Java world, as well as insights about Android, Scala, Groovy and other related technologies.</p><p> <label for="mc4wp_email"><span style="font-weight: bold; font-size: 13pt;">Email address: </span></label> <input id="mc4wp_email" name="EMAIL" required="" placeholder="Your email address" type="email"></p> <input value="Sign up" type="submit"></div><div style="display: none;"><input name="_mc4wp_honeypot" tabindex="-1" autocomplete="off" type="text"></div><input name="_mc4wp_timestamp" value="1459929576" type="hidden"><input name="_mc4wp_form_id" value="28645" type="hidden"><input name="_mc4wp_form_element_id" value="mc4wp-form-3" type="hidden"></div><div class="mc4wp-response"></div></form></div></div><div id="text-html-widget-5" class="widget text-html"><div class="widget-top"><h4>Join Us</h4><div class="stripe-line"></div></div><div class="widget-container"><div><div style="width:150px; height:150px; float:left; margin-top:-10px; margin-left:-10px;"> <img title="Join Us" alt="Join Us" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/w4g-badge-150x150.png" height="150" width="150"></div> With <label style="border:1px solid #D8D8D8;background:#F0F0F0;border-radius:3px;-moz-border-radius:3px;text-shadow: 1px 1px #D0D0D0;text-align:center;font-weight:bold;padding-left:3px;padding-right:3px">1,240,600</label> monthly unique visitors and over <label style="border:1px solid #D8D8D8;background:#F0F0F0;border-radius:3px;-moz-border-radius:3px;text-shadow: 1px 1px #D0D0D0;text-align:center;font-weight:bold;padding-left:3px;padding-right:3px">500</label>
 authors we are placed among the top Java related sites around. 
Constantly being on the lookout for partners; we encourage you to join 
us. So If you have a blog with unique and interesting content then you 
should check out our <strong><a href="http://www.javacodegeeks.com/join-us/jcg">JCG</a></strong> partners program. You can also be a <strong><a href="http://www.javacodegeeks.com/join-us/w4g">guest writer</a></strong> for Java Code Geeks and hone your writing skills!</div><div class="clear"></div></div></div><div id="text-html-widget-4" class="text-html-box"><div id="div-gpt-ad-1415445260332-6" style="width: 300px; height: 600px;"><script type="text/javascript">googletag.cmd.push(function(){googletag.display('div-gpt-ad-1415445260332-6');});</script><div style="border: 0pt none;" id="google_ads_iframe_/70432299/JCG_Side_2_0__container__"><iframe src="javascript:&quot;<html><body style='background:transparent'></body></html>&quot;" style="border: 0px none; vertical-align: bottom;" marginheight="0" marginwidth="0" scrolling="no" name="google_ads_iframe_/70432299/JCG_Side_2_0" title="3rd party ad content" id="google_ads_iframe_/70432299/JCG_Side_2_0" frameborder="0" height="600" width="300"></iframe></div></div></div><div id="text-html-widget-6" class="widget text-html"><div class="widget-top"><h4>Career Opportunities</h4><div class="stripe-line"></div></div><div class="widget-container"><div><style type="text/css" media="screen">#jobroll .wpjb-col-title{width:50%}#jobroll .wpjb-grid .wpjb-grid-row{padding:0;border-bottom:1px dotted #BDBDBD}#jobroll #wpjb-top-search ul
li{padding:0px
6px;font-weight:600;background:none}#jobroll
.pagination{margin-bottom:5px;margin-top:1px}#jobroll .pagination a, #jobroll .pagination span.extend, #jobroll .pagination
span.current{padding:5px}#jobroll .wpjb-grid{background:-webkit-linear-gradient(#E0EAF6, #F6FBFE, #FCFCFC);background:-o-linear-gradient(#E0EAF6, #F6FBFE, #FCFCFC);background:-moz-linear-gradient(#E0EAF6, #F6FBFE, #FCFCFC);background:linear-gradient(#E0EAF6, #F6FBFE, #FCFCFC)}#jobroll #wpjb-top-search{height:185px;background:url("/wp-content/uploads/2015/07/career-opportunities.jpg") no-repeat}</style><div id="jobroll" style="height: 1000px">


<script type="text/javascript">
jQuery("#jobroll .pagination a").click(function(e) {
  e.preventDefault();
  jQuery("#jobroll").load(this.href);
});
jQuery("#jobroll #wpjb-top-search-form").submit(function() {
    jQuery.get(jQuery(this).attr("action"), jQuery(this).serialize(), function(data) {
        jQuery("#jobroll").html(data);
    });
    return false;
});
</script>

<div class="wpjb wpjb-page-index">
<div class="wpjb-grid" style="opacity: 1;">
	<div class="wpjb-grid-row">
		<div class="wpjb-grid-col wpjb-col-logo"><span class="wpjb-glyphs wpjb-icon-building wpjb-icon-only wpjb-icon-32"></span></div>
		<div class="wpjb-grid-col wpjb-col-title"><a onmousedown="indeed_clk(this, '4860');" href="http://www.indeed.com/viewjob?jk=3b19762e55ce1ea4&amp;qd=CYNRf1G_uGD1QB1U4Ms-YaLlieKdRqmMxMgDy7uLjsb14qHDhmHSYYC7IPRPi779W_09IqmbiBCiPp2iOnBXzjjRf1GoyahbLXjpxiIJpuU&amp;indpubnum=4110899194707815&amp;chnl=Jobroll-JCG&amp;atk=1aflb1fmmb9nob51">REMOTE Senior Java Developer</a><span class="wpjb-sub"><strong>ABC Financial Services, Inc.</strong></span></div>
		<div class="wpjb-grid-col wpjb-col-location">Remote</div>
		<div class="wpjb-grid-col wpjb-grid-col-right">Apr, 03<!--<span class="wpjb-sub" style="color:#">Full-time</span>--></div>
	</div>
		<div class="wpjb-grid-row">
		<div class="wpjb-grid-col wpjb-col-logo"><span class="wpjb-glyphs wpjb-icon-building wpjb-icon-only wpjb-icon-32"></span></div>
		<div class="wpjb-grid-col wpjb-col-title"><a onmousedown="indeed_clk(this, '4860');" href="http://www.indeed.com/viewjob?jk=22e0026331b98ce7&amp;qd=CYNRf1G_uGD1QB1U4Ms-YaLlieKdRqmMxMgDy7uLjsb14qHDhmHSYYC7IPRPi779W_09IqmbiBCiPp2iOnBXzjjRf1GoyahbLXjpxiIJpuU&amp;indpubnum=4110899194707815&amp;chnl=Jobroll-JCG&amp;atk=1aflb1fmmb9nob51">Sr Analyst - App Programmer</a><span class="wpjb-sub"><strong>Bank of America</strong></span></div>
		<div class="wpjb-grid-col wpjb-col-location">Charlotte, NC</div>
		<div class="wpjb-grid-col wpjb-grid-col-right">Apr, 02<!--<span class="wpjb-sub" style="color:#">Full-time</span>--></div>
	</div>
		<div class="wpjb-grid-row">
		<div class="wpjb-grid-col wpjb-col-logo"><span class="wpjb-glyphs wpjb-icon-building wpjb-icon-only wpjb-icon-32"></span></div>
		<div class="wpjb-grid-col wpjb-col-title"><a onmousedown="indeed_clk(this, '4860');" href="http://www.indeed.com/viewjob?jk=6a5bc4c7ae44c96c&amp;qd=CYNRf1G_uGD1QB1U4Ms-YaLlieKdRqmMxMgDy7uLjsb14qHDhmHSYYC7IPRPi779W_09IqmbiBCiPp2iOnBXzjjRf1GoyahbLXjpxiIJpuU&amp;indpubnum=4110899194707815&amp;chnl=Jobroll-JCG&amp;atk=1aflb1fmmb9nob51">Database Web Developer (up to 36 month project)</a><span class="wpjb-sub"><strong>AT&amp;T</strong></span></div>
		<div class="wpjb-grid-col wpjb-col-location">Dallas, TX</div>
		<div class="wpjb-grid-col wpjb-grid-col-right">Apr, 02<!--<span class="wpjb-sub" style="color:#">Full-time</span>--></div>
	</div>
		<div class="wpjb-grid-row">
		<div class="wpjb-grid-col wpjb-col-logo"><span class="wpjb-glyphs wpjb-icon-building wpjb-icon-only wpjb-icon-32"></span></div>
		<div class="wpjb-grid-col wpjb-col-title"><a onmousedown="indeed_clk(this, '4860');" href="http://www.indeed.com/viewjob?jk=c9a3db31db239d52&amp;qd=CYNRf1G_uGD1QB1U4Ms-YaLlieKdRqmMxMgDy7uLjsb14qHDhmHSYYC7IPRPi779W_09IqmbiBCiPp2iOnBXzjjRf1GoyahbLXjpxiIJpuU&amp;indpubnum=4110899194707815&amp;chnl=Jobroll-JCG&amp;atk=1aflb1fmmb9nob51">Software Engineer Level 3 or Level 4</a><span class="wpjb-sub"><strong>BOEING</strong></span></div>
		<div class="wpjb-grid-col wpjb-col-location">Colorado Springs, CO</div>
		<div class="wpjb-grid-col wpjb-grid-col-right">Apr, 02<!--<span class="wpjb-sub" style="color:#">Full-time</span>--></div>
	</div>
		<div class="wpjb-grid-row">
		<div class="wpjb-grid-col wpjb-col-logo"><span class="wpjb-glyphs wpjb-icon-building wpjb-icon-only wpjb-icon-32"></span></div>
		<div class="wpjb-grid-col wpjb-col-title"><a onmousedown="indeed_clk(this, '4860');" href="http://www.indeed.com/viewjob?jk=4a56adc77cb2e7ad&amp;qd=CYNRf1G_uGD1QB1U4Ms-YaLlieKdRqmMxMgDy7uLjsb14qHDhmHSYYC7IPRPi779W_09IqmbiBCiPp2iOnBXzjjRf1GoyahbLXjpxiIJpuU&amp;indpubnum=4110899194707815&amp;chnl=Jobroll-JCG&amp;atk=1aflb1fmmb9nob51">Application Developer, Corporate Operations</a><span class="wpjb-sub"><strong>Google</strong></span></div>
		<div class="wpjb-grid-col wpjb-col-location">Mountain View, CA</div>
		<div class="wpjb-grid-col wpjb-grid-col-right">Feb, 07<!--<span class="wpjb-sub" style="color:#">Full-time</span>--></div>
	</div>
		<div class="wpjb-grid-row">
		<div class="wpjb-grid-col wpjb-col-logo"><span class="wpjb-glyphs wpjb-icon-building wpjb-icon-only wpjb-icon-32"></span></div>
		<div class="wpjb-grid-col wpjb-col-title"><a onmousedown="indeed_clk(this, '4860');" href="http://www.indeed.com/viewjob?jk=2f1fc958851ca382&amp;qd=CYNRf1G_uGD1QB1U4Ms-YaLlieKdRqmMxMgDy7uLjsb14qHDhmHSYYC7IPRPi779W_09IqmbiBCiPp2iOnBXzjjRf1GoyahbLXjpxiIJpuU&amp;indpubnum=4110899194707815&amp;chnl=Jobroll-JCG&amp;atk=1aflb1fmmb9nob51">Senior Java Engineer</a><span class="wpjb-sub"><strong>ingenium</strong></span></div>
		<div class="wpjb-grid-col wpjb-col-location">New York, NY</div>
		<div class="wpjb-grid-col wpjb-grid-col-right">Mar, 15<!--<span class="wpjb-sub" style="color:#">Full-time</span>--></div>
	</div>
		<div class="wpjb-grid-row">
		<div class="wpjb-grid-col wpjb-col-logo"><span class="wpjb-glyphs wpjb-icon-building wpjb-icon-only wpjb-icon-32"></span></div>
		<div class="wpjb-grid-col wpjb-col-title"><a onmousedown="indeed_clk(this, '4860');" href="http://www.indeed.com/viewjob?jk=db87302a75de58d9&amp;qd=CYNRf1G_uGD1QB1U4Ms-YaLlieKdRqmMxMgDy7uLjsb14qHDhmHSYYC7IPRPi779W_09IqmbiBCiPp2iOnBXzjjRf1GoyahbLXjpxiIJpuU&amp;indpubnum=4110899194707815&amp;chnl=Jobroll-JCG&amp;atk=1aflb1fmmb9nob51">Applications Development Sr. Programmer Analyst Long Island City NY</a><span class="wpjb-sub"><strong>Citi</strong></span></div>
		<div class="wpjb-grid-col wpjb-col-location">New York, NY</div>
		<div class="wpjb-grid-col wpjb-grid-col-right">Apr, 02<!--<span class="wpjb-sub" style="color:#">Full-time</span>--></div>
	</div>
		<div class="wpjb-grid-row">
		<div class="wpjb-grid-col wpjb-col-logo"><span class="wpjb-glyphs wpjb-icon-building wpjb-icon-only wpjb-icon-32"></span></div>
		<div class="wpjb-grid-col wpjb-col-title"><a onmousedown="indeed_clk(this, '4860');" href="http://www.indeed.com/viewjob?jk=c601090ee2d9dca2&amp;qd=CYNRf1G_uGD1QB1U4Ms-YaLlieKdRqmMxMgDy7uLjsb14qHDhmHSYYC7IPRPi779W_09IqmbiBCiPp2iOnBXzjjRf1GoyahbLXjpxiIJpuU&amp;indpubnum=4110899194707815&amp;chnl=Jobroll-JCG&amp;atk=1aflb1fmmb9nob51">Full Stack Web Developer - Automation</a><span class="wpjb-sub"><strong>Bloomberg</strong></span></div>
		<div class="wpjb-grid-col wpjb-col-location">Princeton, NJ</div>
		<div class="wpjb-grid-col wpjb-grid-col-right">Mar, 30<!--<span class="wpjb-sub" style="color:#">Full-time</span>--></div>
	</div>
		<div class="wpjb-grid-row">
		<div class="wpjb-grid-col wpjb-col-logo"><span class="wpjb-glyphs wpjb-icon-building wpjb-icon-only wpjb-icon-32"></span></div>
		<div class="wpjb-grid-col wpjb-col-title"><a onmousedown="indeed_clk(this, '4860');" href="http://www.indeed.com/viewjob?jk=53750f45974ee2de&amp;qd=CYNRf1G_uGD1QB1U4Ms-YaLlieKdRqmMxMgDy7uLjsb14qHDhmHSYYC7IPRPi779W_09IqmbiBCiPp2iOnBXzjjRf1GoyahbLXjpxiIJpuU&amp;indpubnum=4110899194707815&amp;chnl=Jobroll-JCG&amp;atk=1aflb1fmmb9nob51">Programmer/Analyst</a><span class="wpjb-sub"><strong>UCLA</strong></span></div>
		<div class="wpjb-grid-col wpjb-col-location">Los Angeles, CA</div>
		<div class="wpjb-grid-col wpjb-grid-col-right">Mar, 22<!--<span class="wpjb-sub" style="color:#">Full-time</span>--></div>
	</div>
		<div class="wpjb-grid-row">
		<div class="wpjb-grid-col wpjb-col-logo"><span class="wpjb-glyphs wpjb-icon-building wpjb-icon-only wpjb-icon-32"></span></div>
		<div class="wpjb-grid-col wpjb-col-title"><a onmousedown="indeed_clk(this, '4860');" href="http://www.indeed.com/viewjob?jk=aa6c65d7a101cae3&amp;qd=CYNRf1G_uGD1QB1U4Ms-YaLlieKdRqmMxMgDy7uLjsb14qHDhmHSYYC7IPRPi779W_09IqmbiBCiPp2iOnBXzjjRf1GoyahbLXjpxiIJpuU&amp;indpubnum=4110899194707815&amp;chnl=Jobroll-JCG&amp;atk=1aflb1fmmb9nob51">Software Engineer</a><span class="wpjb-sub"><strong>Google</strong></span></div>
		<div class="wpjb-grid-col wpjb-col-location">Mountain View, CA</div>
		<div class="wpjb-grid-col wpjb-grid-col-right">Mar, 24<!--<span class="wpjb-sub" style="color:#">Full-time</span>--></div>
	</div>
	</div>
</div>

<div class="pagination"><span class="current">1</span><a class="page" href="https://www.javacodegeeks.com/indeed-api/?pg=2&amp;location=&amp;query=java&amp;type=&amp;country=">2</a><span class="extend">...</span><a class="page" href="https://www.javacodegeeks.com/indeed-api/?pg=7101&amp;location=&amp;query=java&amp;type=&amp;country=">7101</a><a class="page" href="https://www.javacodegeeks.com/indeed-api/?pg=2&amp;location=&amp;query=java&amp;type=&amp;country=">»</a></div>
<div class="wpjb wpjb-page-index">
	<div id="wpjb-top-search" class="wpjb-layer-inside">
		<form action="//www.javacodegeeks.com/indeed-api/" method="GET" id="wpjb-top-search-form">
			<table><tbody><tr><td>
			<input autocomplete="off" class="wpjb-top-search-query wpjb-ls-query" name="query" placeholder="Keyword ..." type="text">
			<input autocomplete="off" class="wpjb-top-search-location wpjb-ls-location" name="location" placeholder="Location ..." type="text">
			<select name="country">
				<option selected="selected" value="">Country ...</option>
				<option value="us">United States</option>
				<option value="ar">Argentina</option>
				<option value="au">Australia</option>
				<option value="at">Austria</option>
				<option value="bh">Bahrain</option>
				<option value="be">Belgium</option>
				<option value="br">Brazil</option>
				<option value="ca">Canada</option>
				<option value="cl">Chile</option>
				<option value="cn">China</option>
				<option value="co">Colombia</option>
				<option value="cz">Czech Republic</option>
				<option value="dk">Denmark</option>
				<option value="fi">Finland</option>
				<option value="fr">France</option>
				<option value="de">Germany</option>
				<option value="gr">Greece</option>
				<option value="hk">Hong Kong</option>
				<option value="hu">Hungary</option>
				<option value="in">India</option>
				<option value="id">Indonesia</option>
				<option value="ie">Ireland</option>
				<option value="il">Israel</option>
				<option value="it">Italy</option>
				<option value="jp">Japan</option>
				<option value="kr">Korea</option>
				<option value="kw">Kuwait</option>
				<option value="lu">Luxembourg</option>
				<option value="my">Malaysia</option>
				<option value="mx">Mexico</option>
				<option value="nl">Netherlands</option>
				<option value="nz">New Zealand</option>
				<option value="no">Norway</option>
				<option value="om">Oman</option>
				<option value="pk">Pakistan</option>
				<option value="pe">Peru</option>
				<option value="ph">Philippines</option>
				<option value="pl">Poland</option>
				<option value="pt">Portugal</option>
				<option value="qa">Qatar</option>
				<option value="ro">Romania</option>
				<option value="ru">Russia</option>
				<option value="sa">Saudi Arabia</option>
				<option value="sg">Singapore</option>
				<option value="za">South Africa</option>
				<option value="es">Spain</option>
				<option value="se">Sweden</option>
				<option value="ch">Switzerland</option>
				<option value="tw">Taiwan</option>
				<option value="tr">Turkey</option>
				<option value="ae">United Arab Emirates</option>
				<option value="gb">United Kingdom</option>
				<option value="ve">Venezuela</option>
			</select>
			</td><td>
			<ul>
				<li><small><input class="wpjb-ls-type" name="type" value="5" id="wpjb-search-5" type="radio"><label for="wpjb-search-5"> Freelance</label></small></li>
				<li><small><input class="wpjb-ls-type" name="type" value="3" id="wpjb-search-3" type="radio"><label for="wpjb-search-3"> Full-time</label></small></li>
				<li><small><input class="wpjb-ls-type" name="type" value="6" id="wpjb-search-6" type="radio"><label for="wpjb-search-6"> Intership</label></small></li>
				<li><small><input class="wpjb-ls-type" name="type" value="4" id="wpjb-search-4" type="radio"><label for="wpjb-search-4"> Part-time</label></small></li>
				<li><small><input class="wpjb-ls-type" name="type" value="1" id="wpjb-search-1" type="radio"><label for="wpjb-search-1"> All</label></small></li>
			</ul>
			</td></tr></tbody></table>
			<div class="wpjb-top-search-submit" style="">
				<input value="Filter Results" type="submit">
			</div>
		</form>
	</div>
</div>

<span id="indeed_at"><a href="http://www.indeed.com/">jobs</a> by <a href="http://www.indeed.com/" title="Job Search"><img src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/jobsearch.gif" style="border: 0; vertical-align: middle;" alt="Indeed job search"></a></span>

</div></div><div class="clear"></div></div></div></aside><div class="clear"></div><div class="clear"></div></div></div><footer class="fade-in animated4"><div id="footer-widget-area" class="wide-right-3c container"><div id="footer-first" class="footer-widgets-box"><div id="linkcat-4" class="footer-widget widget_links"><div class="footer-widget-top"><h4>Knowledge Base</h4></div><div class="footer-widget-container"><ul class="xoxo blogroll"><li><a href="http://www.javacodegeeks.com/courses/" target="_blank">Courses</a></li><li><a href="http://examples.javacodegeeks.com/" target="_blank">Examples</a></li><li><a href="http://www.javacodegeeks.com/p/resources.html" target="_blank">Resources</a></li><li><a href="http://www.javacodegeeks.com/tutorials/" target="_blank">Tutorials</a></li><li><a href="http://www.javacodegeeks.com/whitepaper/" target="_blank">Whitepapers</a></li></ul></div></div><div id="linkcat-3" class="footer-widget widget_links"><div class="footer-widget-top"><h4>Partners</h4></div><div class="footer-widget-container"><ul class="xoxo blogroll"><li><a href="http://www.mkyong.com/" target="_blank">Mkyong</a></li></ul></div></div><div id="linkcat-5" class="footer-widget widget_links"><div class="footer-widget-top"><h4>The Code Geeks Network</h4></div><div class="footer-widget-container"><ul class="xoxo blogroll"><li><a href="http://www.dotnetcodegeeks.com/" target="_blank">.NET Code Geeks</a></li><li><a href="http://www.javacodegeeks.com/" target="_blank">Java Code Geeks</a></li><li><a href="http://www.systemcodegeeks.com/" target="_blank">System Code Geeks</a></li><li><a href="http://www.webcodegeeks.com/" target="_blank">Web Code Geeks</a></li></ul></div></div></div><div id="footer-second" class="footer-widgets-box"><div id="linkcat-652" class="footer-widget widget_links"><div class="footer-widget-top"><h4>Hall Of Fame</h4></div><div class="footer-widget-container"><ul class="xoxo blogroll"><li><a href="http://www.javacodegeeks.com/2010/10/android-full-application-tutorial.html" target="_blank">“Android Full Application Tutorial” series</a></li><li><a href="http://www.javacodegeeks.com/2013/01/15-online-learning-websites-that-you-should-check-out.html" target="_blank">11 Online Learning websites that you should check out</a></li><li><a href="http://www.javacodegeeks.com/2013/04/advantages-and-disadvantages-of-cloud-computing-cloud-computing-pros-and-cons.html" target="_blank">Advantages and Disadvantages of Cloud Computing – Cloud computing pros and cons</a></li><li><a href="http://www.javacodegeeks.com/2011/02/android-google-maps-tutorial.html" target="_blank">Android Google Maps Tutorial</a></li><li><a href="http://www.javacodegeeks.com/2011/01/android-json-parsing-gson-tutorial.html" target="_blank">Android JSON Parsing with Gson Tutorial</a></li><li><a href="http://www.javacodegeeks.com/2010/09/android-location-based-services.html" target="_blank">Android Location Based Services Application – GPS location</a></li><li><a href="http://www.javacodegeeks.com/2011/01/android-quick-preferences-tutorial.html" target="_blank">Android Quick Preferences Tutorial</a></li><li><a href="http://www.javacodegeeks.com/2013/03/difference-between-comparator-and-comparable-in-java.html" target="_blank">Difference between Comparator and Comparable in Java</a></li><li><a href="http://www.javacodegeeks.com/2010/05/gwt-2-spring-3-jpa-2-hibernate-35-2.html" target="_blank">GWT 2 Spring 3 JPA 2 Hibernate 3.5 Tutorial</a></li><li><a href="http://www.javacodegeeks.com/2010/08/java-best-practices-vector-arraylist.html" target="_blank">Java Best Practices – Vector vs ArrayList vs HashSet</a></li></ul></div></div></div><div id="footer-third" class="footer-widgets-box"><div id="text-html-widget-7" class="footer-widget text-html"><div class="footer-widget-top"><h4>About Java Code Geeks</h4></div><div class="footer-widget-container"><div>JCGs
 (Java Code Geeks) is an independent online community focused on 
creating the ultimate Java to Java developers resource center; targeted 
at the technical architect, technical team lead (senior developer), 
project manager and junior developers alike. JCGs serve the Java, SOA, 
Agile and Telecom communities with daily news written by domain experts,
 articles, tutorials, reviews, announcements, code snippets and open 
source projects.</div><div class="clear"></div></div></div><div id="text-html-widget-8" class="footer-widget text-html"><div class="footer-widget-top"><h4>Disclaimer</h4></div><div class="footer-widget-container"><div>All
 trademarks and registered trademarks appearing on Java Code Geeks are 
the property of their respective owners. Java is a trademark or 
registered trademark of Oracle Corporation in the United States and 
other countries. Examples Java Code Geeks is not connected to Oracle 
Corporation and is not sponsored by Oracle Corporation.</div><div class="clear"></div></div></div></div></div><div class="clear"></div> </footer><div class="clear"></div><div class="footer-bottom fade-in animated4"><div class="container"><div class="social-icons icon_flat"> <a original-title="Rss" class="ttip" href="http://feeds.feedburner.com/JavaCodeGeeks" target="_blank"><i class="tieicon-rss"></i></a><a original-title="Google+" class="ttip" href="https://plus.google.com/+JavaCodeGeeks/" target="_blank"><i class="tieicon-gplus"></i></a><a original-title="Facebook" class="ttip" href="https://www.facebook.com/javacodegeeks" target="_blank"><i class="tieicon-facebook"></i></a><a original-title="Twitter" class="ttip" href="https://twitter.com/javacodegeeks" target="_blank"><i class="tieicon-twitter"></i></a><a original-title="LinkedIn" class="ttip" href="https://www.linkedin.com/groups/Java-Code-Geeks-3810709" target="_blank"><i class="tieicon-linkedin"></i></a><a original-title="Github" class="ttip" href="https://github.com/javacodegeeks/" target="_blank"><i class="tieicon-github"></i></a></div><div class="alignleft"> Java Code Geeks and all content copyright © 2010-2016, <a href="http://www.exelixismedia.com/">Exelixis Media P.C.</a> | <a href="http://www.javacodegeeks.com/about/terms-of-use/">Terms of Use</a> | <a href="http://www.javacodegeeks.com/about/privacy-policy/">Privacy Policy</a> | <a href="mailto:support@javacodegeeks.com">Contact</a></div></div></div></div><div style="bottom: 15px;" id="topcontrol" class="tieicon-up-open" title="Scroll To Top"></div><div id="fb-root"></div> <script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-12271632-2','auto');ga('send','pageview');</script><script type="text/javascript">window.cookieconsent_options={"message":"We use cookies to ensure that we give you the best experience on our website. If you continue to use this site, you agree to our use of cookies","dismiss":"Got it!","learnMore":"More info","link":"about/privacy-policy/","theme":"light-floating"};</script><script type="text/javascript" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/cookieconsent.js"></script><script>var snp_f=[];var snp_hostname=new RegExp(location.host);var snp_http=new RegExp("^(http|https)://","i");var snp_cookie_prefix='';var snp_separate_cookies=false;var snp_ajax_url='https://www.javacodegeeks.com/wp-admin/admin-ajax.php';var snp_ignore_cookies=false;var snp_enable_analytics_events=true;var snp_enable_mobile=true;var snp_use_in_all=false;var snp_excluded_urls=[];</script><div class="snp-root"> <input id="snp_popup" value="" type="hidden"> <input id="snp_popup_id" value="" type="hidden"> <input id="snp_popup_theme" value="" type="hidden"> <input id="snp_exithref" value="" type="hidden"> <input id="snp_exittarget" value="" type="hidden"></div><link rel="stylesheet" id="font-Open+Sans-css" href="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/css.css" type="text/css" media="all"><script type="text/javascript">var qpprFrontData={"linkData":[],"siteURL":"https:\/\/www.javacodegeeks.com","siteURLq":"https:\/\/www.javacodegeeks.com"};</script><script type="text/javascript">var tie={"go_to":"Go to...","ajaxurl":"https:\/\/www.javacodegeeks.com\/wp-admin\/admin-ajax.php","your_rating":"Your Rating:","is_singular":"1","reading_indicator":""};</script><script type="text/javascript">var mc4wp_forms_config=[];</script><script type="text/javascript">var mc4wp_ajax_vars={"loading_character":"\u2022","ajax_url":"https:\/\/www.javacodegeeks.com\/wp-admin\/admin-ajax.php?mc4wp-form","error_text":"Oops. Something went wrong. Please try again later."};</script><script type="text/javascript" src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/js"></script><script type="text/javascript">(function(){function addEventListener(element,event,handler){if(element.addEventListener){element.addEventListener(event,handler,false);}else if(element.attachEvent){element.attachEvent('on'+event,handler);}}})();</script><script type="text/javascript">(function($)
{'use strict';$(document).ready(function()
{var $subOps=$('.comment-sub-ops'),$subType,$subDeliver;if($subOps.data('auto')==='position')$subOps.prevUntil('form').each(function()
{var $this=$(this);if($this.find(':input[type="submit"]').length)
{$subOps.remove(),$this.before($subOps);return false;}});$subOps=$('.comment-sub-ops'),$subType=$subOps.find('select.cso-sub-type'),$subDeliver=$subOps.find('select.cso-sub-deliver');$subType.on('change',function()
{if($(this).val()==='')
$subDeliver.attr('disabled','disabled');else $subDeliver.removeAttr('disabled');}).trigger('change');});})(jQuery);</script><script type="text/javascript">(function($)
{'use strict';$(document).ready(function()
{var $subOps=$('.comment-sub-ops'),$subType,$subDeliver;if($subOps.data('auto')==='position')$subOps.prevUntil('form').each(function()
{var $this=$(this);if($this.find(':input[type="submit"]').length)
{$subOps.remove(),$this.before($subOps);return false;}});$subOps=$('.comment-sub-ops'),$subType=$subOps.find('select.cso-sub-type'),$subDeliver=$subOps.find('select.cso-sub-deliver');$subType.on('change',function()
{if($(this).val()==='')
$subDeliver.attr('disabled','disabled');else $subDeliver.removeAttr('disabled');}).trigger('change');});})(jQuery);</script><script type="text/javascript">function w3tc_load_js(u){var d=document,p=d.getElementsByTagName('HEAD')[0],c=d.createElement('script');c.type='text/javascript';c.src=u;p.appendChild(c);}</script><script type="text/javascript">w3tc_load_js('https://www.javacodegeeks.com/wp-content/cache/minify/000000/b0480/single.include-footer.87b6e9.js');</script><script type="text/javascript">/* <![CDATA[ */(function(d,s,a,i,j,r,l,m,t){try{l=d.getElementsByTagName('a');t=d.createElement('textarea');for(i=0;l.length-i;i++){try{a=l[i].href;s=a.indexOf('/cdn-cgi/l/email-protection');m=a.length;if(a&&s>-1&&m>28){j=28+s;s='';if(j<m){r='0x'+a.substr(j,2)|0;for(j+=2;j<m&&a.charAt(j)!='X';j+=2)s+='%'+('0'+('0x'+a.substr(j,2)^r).toString(16)).slice(-2);j++;s=decodeURIComponent(s)+a.substr(j,m-j)}t.innerHTML=s.replace(/</g,'&lt;').replace(/>/g,'&gt;');l[i].href='mailto:'+t.value}}catch(e){}}}catch(e){}})(document);/* ]]> */</script><iframe style="display: none; width: 0px; height: 0px;" name="google_osd_static_frame" id="google_osd_static_frame_7997152232169"></iframe><div id="snppopup-welcome" class="snp-pop-50853 snppopup"><input class="snp_open" value="load" type="hidden"><input class="snp_show_on_exit" value="2" type="hidden"><input class="snp_exit_js_alert_text" value="" type="hidden"><input class="snp_open_after" value="5" type="hidden"><input class="snp_open_scroll" value="10" type="hidden"><input class="snp_optin_redirect_url" value="" type="hidden"><input class="snp_show_cb_button" value="yes" type="hidden"><input class="snp_popup_id" value="50853" type="hidden"><input class="snp_popup_theme" value="builder" type="hidden"><input class="snp_overlay" value="default" type="hidden"><input class="snp_cookie_conversion" value="30" type="hidden"><input class="snp_cookie_close" value="5" type="hidden"><div class="snp-builder"><div class="snp-bld-step-cont snp-bld-step-cont-1 snp-bld-center"><div id="snp-bld-step-1" data-width="800" data-height="500" class="snp-bld-step snp-bld-step-1  animated bounceInDown" data-animation="bounceInDown"><form action="#" method="post" class="snp-subscribeform snp_subscribeform"><div class="bld-el-cont bld-el-img bld-step-1-el-0  animated " data-animation=""><img class="bld-el  " src="Java%208%20Features%20Tutorial%20-%20The%20ULTIMATE%20Guide%20%28PDF%20Download%29_files/books_promo_lp.png"></div><div class="bld-el-cont bld-el-text bld-step-1-el-1  animated " data-animation=""><div class="bld-el  "><p style="text-align: center;"><strong><span style="font-size: 26px;">Want to take your Java skills to the next level?</span></strong></p></div></div><div class="bld-el-cont bld-el-text bld-step-1-el-2  animated " data-animation=""><div class="bld-el  "><p style="text-align: center;"><span style="font-size: 18px;">Grab our programming books for <strong>FREE</strong>!</span></p></div></div><div class="bld-el-cont bld-el-text bld-step-1-el-3  animated " data-animation=""><div class="bld-el  "><p>Here are some of the eBooks you will get:</p></div></div><div class="bld-el-cont bld-el-pointlist bld-step-1-el-4  animated " data-animation=""><ul class="bld-el  "><li>Advanced Java Guide</li><li>Java Design Patterns</li><li>JMeter Tutorial</li><li>Java 8 Features Tutorial</li><li>JUnit Tutorial</li><li>JSF Programming Cookbook</li><li>Java Concurrency Essentials</li></ul></div><div class="bld-el-cont bld-el-input bld-step-1-el-5  animated  bld-icon" data-animation=""><span class="bld-input-icon"><i class="fa fa-envelope"></i></span><div class="bld-table-cont"><input placeholder="Your email address" required="" name="email" class="bld-el  "></div></div><div class="bld-el-cont bld-el-button bld-step-1-el-6  animated " data-animation=""><button class="bld-el   snp-submit snp-cursor-pointer" data-loading="&lt;i class=&quot;fa fa-spinner fa-spin&quot;&gt;&lt;/i&gt;" type="submit">Get the Books <i style="margin-left: 15px;" class="fa fa-arrow-right"></i></button></div><div class="bld-el-cont bld-el-button bld-step-1-el-7  animated " data-animation=""><button class="bld-el   snp-close-link snp-cursor-pointer" data-loading="&lt;i class=&quot;fa fa-spinner fa-spin&quot;&gt;&lt;/i&gt;" type="button">No Thanks!</button></div></form></div></div></div><div class="snp-overlay" id="snp-pop-50853-overlay"></div><script>var snp_bld_open50853=function(){_snp_bld_open(50853);}
var snp_bld_close50853=function(){_snp_bld_close(50853);}</script><style>.snp-pop-50853 .snp-bld-step-cont-1{margin-top:0px;margin-bottom:0px;margin-left:0px;margin-right:0px}.snp-pop-50853 .snp-bld-step-1{width:800px;height:500px;background-position:center center;background-repeat:repeat}.snp-pop-50853 .bld-step-1-el-0{border:1px
solid transparent;width:367px;height:473px;top:26px;left:0px;z-index:100}.snp-pop-50853 .bld-step-1-el-0 .bld-el,.snp-pop-50853 .bld-step-1-el-0 .bld-el p,.snp-pop-50853 .bld-step-1-el-0 .bld-el:focus,.snp-pop-50853 .bld-step-1-el-0 .bld-el:active,.snp-pop-50853 .bld-step-1-el-0 .bld-el:hover{outline:0}.snp-pop-50853 .bld-step-1-el-1{border:1px
solid transparent;width:413px;height:70px;top:9px;left:380px;z-index:100}.snp-pop-50853 .bld-step-1-el-1 .bld-el,.snp-pop-50853 .bld-step-1-el-1 .bld-el p,.snp-pop-50853 .bld-step-1-el-1 .bld-el:focus,.snp-pop-50853 .bld-step-1-el-1 .bld-el:active,.snp-pop-50853 .bld-step-1-el-1 .bld-el:hover{outline:0;font-family:Open Sans;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-50853 .bld-step-1-el-2{border:1px
solid transparent;width:255px;height:50px;top:93px;left:455px;z-index:100}.snp-pop-50853 .bld-step-1-el-2 .bld-el,.snp-pop-50853 .bld-step-1-el-2 .bld-el p,.snp-pop-50853 .bld-step-1-el-2 .bld-el:focus,.snp-pop-50853 .bld-step-1-el-2 .bld-el:active,.snp-pop-50853 .bld-step-1-el-2 .bld-el:hover{outline:0;font-family:Open Sans;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-50853 .bld-step-1-el-3{border:1px
solid transparent;width:336px;height:29px;top:155px;left:427px;z-index:100}.snp-pop-50853 .bld-step-1-el-3 .bld-el,.snp-pop-50853 .bld-step-1-el-3 .bld-el p,.snp-pop-50853 .bld-step-1-el-3 .bld-el:focus,.snp-pop-50853 .bld-step-1-el-3 .bld-el:active,.snp-pop-50853 .bld-step-1-el-3 .bld-el:hover{outline:0;font-family:Open Sans;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-50853 .bld-step-1-el-4{border:1px
solid transparent;width:320px;height:140px;top:184px;left:428px;z-index:100}.snp-pop-50853 .bld-step-1-el-4 .bld-el,.snp-pop-50853 .bld-step-1-el-4 .bld-el p,.snp-pop-50853 .bld-step-1-el-4 .bld-el:focus,.snp-pop-50853 .bld-step-1-el-4 .bld-el:active,.snp-pop-50853 .bld-step-1-el-4 .bld-el:hover{outline:0;font-family:Open Sans;font-size:14px;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-50853 .bld-step-1-el-4 ul.bld-el
li{line-height:normal;padding-left:15px;background-image:url("/wp-content/plugins/arscode-ninja-popups/img/dot.png")}.snp-pop-50853 .bld-step-1-el-5{border:1px
solid transparent;width:415px;height:50px;top:339px;left:380px;z-index:100}.snp-pop-50853 .bld-step-1-el-5 .bld-el,.snp-pop-50853 .bld-step-1-el-5 .bld-el p,.snp-pop-50853 .bld-step-1-el-5 .bld-el:focus,.snp-pop-50853 .bld-step-1-el-5 .bld-el:active,.snp-pop-50853 .bld-step-1-el-5 .bld-el:hover{outline:0;height:48px;font-family:Open Sans;font-size:14px;border-style:solid;border-width:1px;border-color:#197fd2;border-radius:5px;padding:5px;background-position:center center;background-repeat:repeat}.snp-pop-50853 .bld-step-1-el-5 .bld-el::-webkit-input-placeholder{color: }.snp-pop-50853 .bld-step-1-el-5 .bld-el::-moz-placeholder{color: }.snp-pop-50853 .bld-step-1-el-5.bld-icon .bld-input-icon{border-right-width:0 !important;width:px;font-size:20px;border-style:solid;border-width:1px;border-color:#197fd2;border-radius:5px;background-color:#197FD2}.snp-pop-50853 .bld-step-1-el-6{border:1px
solid transparent;width:200px;height:60px;top:400px;left:384px;z-index:100}.snp-pop-50853 .bld-step-1-el-6 .bld-el,.snp-pop-50853 .bld-step-1-el-6 .bld-el p,.snp-pop-50853 .bld-step-1-el-6 .bld-el:focus,.snp-pop-50853 .bld-step-1-el-6 .bld-el:active,.snp-pop-50853 .bld-step-1-el-6 .bld-el:hover{outline:0;color:#fff;font-family:Open Sans;font-size:20px;font-weight:bold;border-style:none;border-width:0px;border-radius:5px;background-color:#197FD2 !important;background-position:center center;background-repeat:repeat;padding-left:10px}.snp-pop-50853 .bld-step-1-el-7{border:1px
solid transparent;width:200px;height:60px;top:400px;left:591px;z-index:100}.snp-pop-50853 .bld-step-1-el-7 .bld-el,.snp-pop-50853 .bld-step-1-el-7 .bld-el p,.snp-pop-50853 .bld-step-1-el-7 .bld-el:focus,.snp-pop-50853 .bld-step-1-el-7 .bld-el:active,.snp-pop-50853 .bld-step-1-el-7 .bld-el:hover{outline:0;color:#fff;font-family:Open Sans;font-size:20px;font-weight:bold;border-style:none;border-width:0px;border-radius:5px;background-color:#5b5b5b !important;background-position:center center;background-repeat:repeat;padding-left:10px}#snp-pop-50853-overlay{opacity:1;background-color:#fafafa;background-image:url('')}</style><script>snp_f['snppopup-welcome-open']=snp_bld_open50853;snp_f['snppopup-welcome-close']=snp_bld_close50853;</script></div></body></html>